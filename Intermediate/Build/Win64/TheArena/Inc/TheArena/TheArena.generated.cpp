// Copyright 1998-2014 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Public/TheArena.h"
#include "TheArena.generated.dep.h"
void EmptyLinkFunctionForGeneratedCodeTheArena() {}
static class UEnum* EShooterPhysMaterialType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern THEARENA_API class UEnum* Z_Construct_UEnum_TheArena_EShooterPhysMaterialType();
		extern THEARENA_API class UPackage* Z_Construct_UPackage_TheArena();
		Singleton = GetStaticEnum(Z_Construct_UEnum_TheArena_EShooterPhysMaterialType, Z_Construct_UPackage_TheArena(), TEXT("EShooterPhysMaterialType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EShooterPhysMaterialType(EShooterPhysMaterialType_StaticEnum);
class UScriptStruct* FDecalData::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_FDecalData();
		extern THEARENA_API uint32 Get_Z_Construct_UScriptStruct_FDecalData_CRC();
		extern THEARENA_API class UPackage* Z_Construct_UPackage_TheArena();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDecalData, Z_Construct_UPackage_TheArena(), TEXT("DecalData"), sizeof(FDecalData), Get_Z_Construct_UScriptStruct_FDecalData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDecalData(FDecalData::StaticStruct);
static struct FScriptStruct_TheArena_StaticRegisterNativesFDecalData
{
	FScriptStruct_TheArena_StaticRegisterNativesFDecalData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DecalData")),new UScriptStruct::TCppStructOps<FDecalData>);
	}
} ScriptStruct_TheArena_StaticRegisterNativesFDecalData;
class UScriptStruct* FTakeHitInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_FTakeHitInfo();
		extern THEARENA_API uint32 Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC();
		extern THEARENA_API class UPackage* Z_Construct_UPackage_TheArena();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTakeHitInfo, Z_Construct_UPackage_TheArena(), TEXT("TakeHitInfo"), sizeof(FTakeHitInfo), Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTakeHitInfo(FTakeHitInfo::StaticStruct);
static struct FScriptStruct_TheArena_StaticRegisterNativesFTakeHitInfo
{
	FScriptStruct_TheArena_StaticRegisterNativesFTakeHitInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TakeHitInfo")),new UScriptStruct::TCppStructOps<FTakeHitInfo>);
	}
} ScriptStruct_TheArena_StaticRegisterNativesFTakeHitInfo;
	void UArenaDamageType::StaticRegisterNativesUArenaDamageType()
	{
	}
	IMPLEMENT_CLASS(UArenaDamageType, 34702855);
class UScriptStruct* FPlayerData::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_AArenaCharacter_FPlayerData();
		extern THEARENA_API uint32 Get_Z_Construct_UScriptStruct_AArenaCharacter_FPlayerData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_AArenaCharacter_FPlayerData, AArenaCharacter::StaticClass(), TEXT("PlayerData"), sizeof(FPlayerData), Get_Z_Construct_UScriptStruct_AArenaCharacter_FPlayerData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPlayerData(FPlayerData::StaticStruct);
	void AArenaCharacter::StaticRegisterNativesAArenaCharacter()
	{
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"GetAimOffsets",(Native)&AArenaCharacter::execGetAimOffsets);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"GetBaseMovementSpeed",(Native)&AArenaCharacter::execGetBaseMovementSpeed);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"GetCrouchedMovementSpeed",(Native)&AArenaCharacter::execGetCrouchedMovementSpeed);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"GetCurrentHealth",(Native)&AArenaCharacter::execGetCurrentHealth);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"GetCurrentStamina",(Native)&AArenaCharacter::execGetCurrentStamina);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"GetMaxHealth",(Native)&AArenaCharacter::execGetMaxHealth);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"GetMaxStamina",(Native)&AArenaCharacter::execGetMaxStamina);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"GetRunningMovementSpeed",(Native)&AArenaCharacter::execGetRunningMovementSpeed);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"GetTargetingMovementSpeed",(Native)&AArenaCharacter::execGetTargetingMovementSpeed);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"GetWeapon",(Native)&AArenaCharacter::execGetWeapon);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"IsFiring",(Native)&AArenaCharacter::execIsFiring);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"IsRunning",(Native)&AArenaCharacter::execIsRunning);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"IsTargeting",(Native)&AArenaCharacter::execIsTargeting);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"OnRep_CurrentWeapon",(Native)&AArenaCharacter::execOnRep_CurrentWeapon);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"OnRep_LastTakeHitInfo",(Native)&AArenaCharacter::execOnRep_LastTakeHitInfo);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"ServerEquipWeapon",(Native)&AArenaCharacter::execServerEquipWeapon);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"ServerSetCrouched",(Native)&AArenaCharacter::execServerSetCrouched);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"ServerSetRunning",(Native)&AArenaCharacter::execServerSetRunning);
		FNativeFunctionRegistrar::RegisterFunction(AArenaCharacter::StaticClass(),"ServerSetTargeting",(Native)&AArenaCharacter::execServerSetTargeting);
		UScriptStruct::DeferCppStructOps(FName(TEXT("PlayerData")),new UScriptStruct::TCppStructOps<FPlayerData>);
	}
	IMPLEMENT_CLASS(AArenaCharacter, 73352830);
	void AArenaCharacter::ServerEquipWeapon(class AArenaRangedWeapon* NewWeapon)
	{
		ArenaCharacter_eventServerEquipWeapon_Parms Parms;
		Parms.NewWeapon=NewWeapon;
		ProcessEvent(FindFunctionChecked(THEARENA_ServerEquipWeapon),&Parms);
	}
	void AArenaCharacter::ServerSetCrouched(bool bNewCrouched, bool bToggle)
	{
		ArenaCharacter_eventServerSetCrouched_Parms Parms;
		Parms.bNewCrouched=bNewCrouched ? true : false;
		Parms.bToggle=bToggle ? true : false;
		ProcessEvent(FindFunctionChecked(THEARENA_ServerSetCrouched),&Parms);
	}
	void AArenaCharacter::ServerSetRunning(bool bNewRunning, bool bToggle)
	{
		ArenaCharacter_eventServerSetRunning_Parms Parms;
		Parms.bNewRunning=bNewRunning ? true : false;
		Parms.bToggle=bToggle ? true : false;
		ProcessEvent(FindFunctionChecked(THEARENA_ServerSetRunning),&Parms);
	}
	void AArenaCharacter::ServerSetTargeting(bool bNewTargeting)
	{
		ArenaCharacter_eventServerSetTargeting_Parms Parms;
		Parms.bNewTargeting=bNewTargeting ? true : false;
		ProcessEvent(FindFunctionChecked(THEARENA_ServerSetTargeting),&Parms);
	}
	void AArenaAI::StaticRegisterNativesAArenaAI()
	{
	}
	IMPLEMENT_CLASS(AArenaAI, 2865115589);
	void AArenaAIController::StaticRegisterNativesAArenaAIController()
	{
		FNativeFunctionRegistrar::RegisterFunction(AArenaAIController::StaticClass(),"FindClosestEnemy",(Native)&AArenaAIController::execFindClosestEnemy);
		FNativeFunctionRegistrar::RegisterFunction(AArenaAIController::StaticClass(),"FindClosestEnemyWithLOS",(Native)&AArenaAIController::execFindClosestEnemyWithLOS);
		FNativeFunctionRegistrar::RegisterFunction(AArenaAIController::StaticClass(),"ShootEnemy",(Native)&AArenaAIController::execShootEnemy);
	}
	IMPLEMENT_CLASS(AArenaAIController, 4038740651);
	void AArenaGameSession::StaticRegisterNativesAArenaGameSession()
	{
	}
	IMPLEMENT_CLASS(AArenaGameSession, 2814148760);
	void AArenaPlayerState::StaticRegisterNativesAArenaPlayerState()
	{
		FNativeFunctionRegistrar::RegisterFunction(AArenaPlayerState::StaticClass(),"InformAboutKill",(Native)&AArenaPlayerState::execInformAboutKill);
		FNativeFunctionRegistrar::RegisterFunction(AArenaPlayerState::StaticClass(),"OnRep_TeamColor",(Native)&AArenaPlayerState::execOnRep_TeamColor);
	}
	IMPLEMENT_CLASS(AArenaPlayerState, 3868947208);
	void AArenaPlayerState::InformAboutKill(class AArenaPlayerState* KillerPlayerState, const class UDamageType* KillerDamageType, class AArenaPlayerState* KilledPlayerState)
	{
		ArenaPlayerState_eventInformAboutKill_Parms Parms;
		Parms.KillerPlayerState=KillerPlayerState;
		Parms.KillerDamageType=KillerDamageType;
		Parms.KilledPlayerState=KilledPlayerState;
		ProcessEvent(FindFunctionChecked(THEARENA_InformAboutKill),&Parms);
	}
	void AArenaGameState::StaticRegisterNativesAArenaGameState()
	{
	}
	IMPLEMENT_CLASS(AArenaGameState, 2724155267);
	void AArenaImpactEffect::StaticRegisterNativesAArenaImpactEffect()
	{
	}
	IMPLEMENT_CLASS(AArenaImpactEffect, 3064490352);
	void UArenaLocalPlayer::StaticRegisterNativesUArenaLocalPlayer()
	{
	}
	IMPLEMENT_CLASS(UArenaLocalPlayer, 2234493143);
	void AArenaPlayerCameraManager::StaticRegisterNativesAArenaPlayerCameraManager()
	{
	}
	IMPLEMENT_CLASS(AArenaPlayerCameraManager, 1962230892);
	void AArenaPlayerController::StaticRegisterNativesAArenaPlayerController()
	{
		FNativeFunctionRegistrar::RegisterFunction(AArenaPlayerController::StaticClass(),"ClientEndOnlineGame",(Native)&AArenaPlayerController::execClientEndOnlineGame);
		FNativeFunctionRegistrar::RegisterFunction(AArenaPlayerController::StaticClass(),"ClientGameStarted",(Native)&AArenaPlayerController::execClientGameStarted);
		FNativeFunctionRegistrar::RegisterFunction(AArenaPlayerController::StaticClass(),"ClientStartOnlineGame",(Native)&AArenaPlayerController::execClientStartOnlineGame);
		FNativeFunctionRegistrar::RegisterFunction(AArenaPlayerController::StaticClass(),"ServerSuicide",(Native)&AArenaPlayerController::execServerSuicide);
		FNativeFunctionRegistrar::RegisterFunction(AArenaPlayerController::StaticClass(),"SetGodMode",(Native)&AArenaPlayerController::execSetGodMode);
		FNativeFunctionRegistrar::RegisterFunction(AArenaPlayerController::StaticClass(),"Suicide",(Native)&AArenaPlayerController::execSuicide);
	}
	IMPLEMENT_CLASS(AArenaPlayerController, 1190322412);
	void AArenaPlayerController::ClientEndOnlineGame()
	{
		ProcessEvent(FindFunctionChecked(THEARENA_ClientEndOnlineGame),NULL);
	}
	void AArenaPlayerController::ClientGameStarted()
	{
		ProcessEvent(FindFunctionChecked(THEARENA_ClientGameStarted),NULL);
	}
	void AArenaPlayerController::ClientStartOnlineGame()
	{
		ProcessEvent(FindFunctionChecked(THEARENA_ClientStartOnlineGame),NULL);
	}
	void AArenaPlayerController::ServerSuicide()
	{
		ProcessEvent(FindFunctionChecked(THEARENA_ServerSuicide),NULL);
	}
class UScriptStruct* FWeaponData::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponData();
		extern THEARENA_API uint32 Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponData, AArenaRangedWeapon::StaticClass(), TEXT("WeaponData"), sizeof(FWeaponData), Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FWeaponData(FWeaponData::StaticStruct);
class UScriptStruct* FWeaponAnim::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponAnim();
		extern THEARENA_API uint32 Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponAnim_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponAnim, AArenaRangedWeapon::StaticClass(), TEXT("WeaponAnim"), sizeof(FWeaponAnim), Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponAnim_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FWeaponAnim(FWeaponAnim::StaticStruct);
	void AArenaRangedWeapon::StaticRegisterNativesAArenaRangedWeapon()
	{
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon::StaticClass(),"ClientStartReload",(Native)&AArenaRangedWeapon::execClientStartReload);
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon::StaticClass(),"GetPawnOwner",(Native)&AArenaRangedWeapon::execGetPawnOwner);
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon::StaticClass(),"OnRep_BurstCounter",(Native)&AArenaRangedWeapon::execOnRep_BurstCounter);
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon::StaticClass(),"OnRep_MyPawn",(Native)&AArenaRangedWeapon::execOnRep_MyPawn);
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon::StaticClass(),"OnRep_Reload",(Native)&AArenaRangedWeapon::execOnRep_Reload);
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon::StaticClass(),"ServerHandleFiring",(Native)&AArenaRangedWeapon::execServerHandleFiring);
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon::StaticClass(),"ServerStartFire",(Native)&AArenaRangedWeapon::execServerStartFire);
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon::StaticClass(),"ServerStartReload",(Native)&AArenaRangedWeapon::execServerStartReload);
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon::StaticClass(),"ServerStopFire",(Native)&AArenaRangedWeapon::execServerStopFire);
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon::StaticClass(),"ServerStopReload",(Native)&AArenaRangedWeapon::execServerStopReload);
		UScriptStruct::DeferCppStructOps(FName(TEXT("WeaponAnim")),new UScriptStruct::TCppStructOps<FWeaponAnim>);
		UScriptStruct::DeferCppStructOps(FName(TEXT("WeaponData")),new UScriptStruct::TCppStructOps<FWeaponData>);
	}
	IMPLEMENT_CLASS(AArenaRangedWeapon, 4119986792);
	void AArenaRangedWeapon::ClientStartReload()
	{
		ProcessEvent(FindFunctionChecked(THEARENA_ClientStartReload),NULL);
	}
	void AArenaRangedWeapon::ServerHandleFiring()
	{
		ProcessEvent(FindFunctionChecked(THEARENA_ServerHandleFiring),NULL);
	}
	void AArenaRangedWeapon::ServerStartFire()
	{
		ProcessEvent(FindFunctionChecked(THEARENA_ServerStartFire),NULL);
	}
	void AArenaRangedWeapon::ServerStartReload()
	{
		ProcessEvent(FindFunctionChecked(THEARENA_ServerStartReload),NULL);
	}
	void AArenaRangedWeapon::ServerStopFire()
	{
		ProcessEvent(FindFunctionChecked(THEARENA_ServerStopFire),NULL);
	}
	void AArenaRangedWeapon::ServerStopReload()
	{
		ProcessEvent(FindFunctionChecked(THEARENA_ServerStopReload),NULL);
	}
class UScriptStruct* FProjectileWeaponData::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_Projectile_FProjectileWeaponData();
		extern THEARENA_API uint32 Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_Projectile_FProjectileWeaponData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_AArenaRangedWeapon_Projectile_FProjectileWeaponData, AArenaRangedWeapon_Projectile::StaticClass(), TEXT("ProjectileWeaponData"), sizeof(FProjectileWeaponData), Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_Projectile_FProjectileWeaponData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FProjectileWeaponData(FProjectileWeaponData::StaticStruct);
	void AArenaRangedWeapon_Projectile::StaticRegisterNativesAArenaRangedWeapon_Projectile()
	{
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon_Projectile::StaticClass(),"ServerFireProjectile",(Native)&AArenaRangedWeapon_Projectile::execServerFireProjectile);
		UScriptStruct::DeferCppStructOps(FName(TEXT("ProjectileWeaponData")),new UScriptStruct::TCppStructOps<FProjectileWeaponData>);
	}
	IMPLEMENT_CLASS(AArenaRangedWeapon_Projectile, 2958360570);
	void AArenaRangedWeapon_Projectile::ServerFireProjectile(FVector Origin, struct FVector_NetQuantizeNormal ShootDir)
	{
		ArenaRangedWeapon_Projectile_eventServerFireProjectile_Parms Parms;
		Parms.Origin=Origin;
		Parms.ShootDir=ShootDir;
		ProcessEvent(FindFunctionChecked(THEARENA_ServerFireProjectile),&Parms);
	}
	void AArenaProjectile::StaticRegisterNativesAArenaProjectile()
	{
		FNativeFunctionRegistrar::RegisterFunction(AArenaProjectile::StaticClass(),"OnImpact",(Native)&AArenaProjectile::execOnImpact);
		FNativeFunctionRegistrar::RegisterFunction(AArenaProjectile::StaticClass(),"OnRep_Exploded",(Native)&AArenaProjectile::execOnRep_Exploded);
		FNativeFunctionRegistrar::RegisterFunction(AArenaProjectile::StaticClass(),"SetPawnOwner",(Native)&AArenaProjectile::execSetPawnOwner);
	}
	IMPLEMENT_CLASS(AArenaProjectile, 3107721277);
class UScriptStruct* FInstantHitInfo::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantHitInfo();
		extern THEARENA_API uint32 Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantHitInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantHitInfo, AArenaRangedWeapon_Instant::StaticClass(), TEXT("InstantHitInfo"), sizeof(FInstantHitInfo), Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantHitInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInstantHitInfo(FInstantHitInfo::StaticStruct);
class UScriptStruct* FInstantWeaponData::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantWeaponData();
		extern THEARENA_API uint32 Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantWeaponData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantWeaponData, AArenaRangedWeapon_Instant::StaticClass(), TEXT("InstantWeaponData"), sizeof(FInstantWeaponData), Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantWeaponData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInstantWeaponData(FInstantWeaponData::StaticStruct);
	void AArenaRangedWeapon_Instant::StaticRegisterNativesAArenaRangedWeapon_Instant()
	{
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon_Instant::StaticClass(),"OnRep_HitNotify",(Native)&AArenaRangedWeapon_Instant::execOnRep_HitNotify);
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon_Instant::StaticClass(),"ServerNotifyHit",(Native)&AArenaRangedWeapon_Instant::execServerNotifyHit);
		FNativeFunctionRegistrar::RegisterFunction(AArenaRangedWeapon_Instant::StaticClass(),"ServerNotifyMiss",(Native)&AArenaRangedWeapon_Instant::execServerNotifyMiss);
		UScriptStruct::DeferCppStructOps(FName(TEXT("InstantWeaponData")),new UScriptStruct::TCppStructOps<FInstantWeaponData>);
		UScriptStruct::DeferCppStructOps(FName(TEXT("InstantHitInfo")),new UScriptStruct::TCppStructOps<FInstantHitInfo>);
	}
	IMPLEMENT_CLASS(AArenaRangedWeapon_Instant, 2701138744);
	void AArenaRangedWeapon_Instant::ServerNotifyHit(const struct FHitResult Impact, struct FVector_NetQuantizeNormal ShootDir, int32 RandomSeed, float ReticleSpread)
	{
		ArenaRangedWeapon_Instant_eventServerNotifyHit_Parms Parms;
		Parms.Impact=Impact;
		Parms.ShootDir=ShootDir;
		Parms.RandomSeed=RandomSeed;
		Parms.ReticleSpread=ReticleSpread;
		ProcessEvent(FindFunctionChecked(THEARENA_ServerNotifyHit),&Parms);
	}
	void AArenaRangedWeapon_Instant::ServerNotifyMiss(struct FVector_NetQuantizeNormal ShootDir, int32 RandomSeed, float ReticleSpread)
	{
		ArenaRangedWeapon_Instant_eventServerNotifyMiss_Parms Parms;
		Parms.ShootDir=ShootDir;
		Parms.RandomSeed=RandomSeed;
		Parms.ReticleSpread=ReticleSpread;
		ProcessEvent(FindFunctionChecked(THEARENA_ServerNotifyMiss),&Parms);
	}
	void UBTTask_FindPointNearEnemy::StaticRegisterNativesUBTTask_FindPointNearEnemy()
	{
	}
	IMPLEMENT_CLASS(UBTTask_FindPointNearEnemy, 3297010658);
	void UBTTask_HasLosTo::StaticRegisterNativesUBTTask_HasLosTo()
	{
	}
	IMPLEMENT_CLASS(UBTTask_HasLosTo, 1815916669);
	void ATheArenaGameMode::StaticRegisterNativesATheArenaGameMode()
	{
		FNativeFunctionRegistrar::RegisterFunction(ATheArenaGameMode::StaticClass(),"FinishMatch",(Native)&ATheArenaGameMode::execFinishMatch);
		FNativeFunctionRegistrar::RegisterFunction(ATheArenaGameMode::StaticClass(),"SetAllowBots",(Native)&ATheArenaGameMode::execSetAllowBots);
	}
	IMPLEMENT_CLASS(ATheArenaGameMode, 121110106);
FName THEARENA_ClientEndOnlineGame = FName(TEXT("ClientEndOnlineGame"));
FName THEARENA_ClientGameStarted = FName(TEXT("ClientGameStarted"));
FName THEARENA_ClientStartOnlineGame = FName(TEXT("ClientStartOnlineGame"));
FName THEARENA_ClientStartReload = FName(TEXT("ClientStartReload"));
FName THEARENA_InformAboutKill = FName(TEXT("InformAboutKill"));
FName THEARENA_ServerEquipWeapon = FName(TEXT("ServerEquipWeapon"));
FName THEARENA_ServerFireProjectile = FName(TEXT("ServerFireProjectile"));
FName THEARENA_ServerHandleFiring = FName(TEXT("ServerHandleFiring"));
FName THEARENA_ServerNotifyHit = FName(TEXT("ServerNotifyHit"));
FName THEARENA_ServerNotifyMiss = FName(TEXT("ServerNotifyMiss"));
FName THEARENA_ServerSetCrouched = FName(TEXT("ServerSetCrouched"));
FName THEARENA_ServerSetRunning = FName(TEXT("ServerSetRunning"));
FName THEARENA_ServerSetTargeting = FName(TEXT("ServerSetTargeting"));
FName THEARENA_ServerStartFire = FName(TEXT("ServerStartFire"));
FName THEARENA_ServerStartReload = FName(TEXT("ServerStartReload"));
FName THEARENA_ServerStopFire = FName(TEXT("ServerStopFire"));
FName THEARENA_ServerStopReload = FName(TEXT("ServerStopReload"));
FName THEARENA_ServerSuicide = FName(TEXT("ServerSuicide"));
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_UEngineTypes_FRadialDamageEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_UEngineTypes_FPointDamageEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_UEngineTypes_FDamageEvent();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterial_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDamageType();
	ENGINE_API class UClass* Z_Construct_UClass_UForceFeedbackEffect_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_UCanvas_FCanvasIcon();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_UObject_FRotator();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UClass* Z_Construct_UClass_UAudioComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundCue_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSystem_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInstanceDynamic_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTree_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_AAIController();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTreeComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameSession();
	ENGINE_API class UClass* Z_Construct_UClass_UDamageType_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerState();
	ENGINE_API class UClass* Z_Construct_UClass_AGameState();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_UEngineTypes_FHitResult();
	ENGINE_API class UClass* Z_Construct_UClass_UPointLightComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULocalPlayer();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerCameraManager();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimMontage_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraShake_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSystemComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshComponent_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVector_NetQuantizeNormal();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_UObject_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_USphereComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UProjectileMovementComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTTask_BlackboardBase();
	AIMODULE_API class UClass* Z_Construct_UClass_UBTDecorator();
	AIMODULE_API class UScriptStruct* Z_Construct_UScriptStruct_UBehaviorTreeTypes_FBlackboardKeySelector();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	ENGINE_API class UClass* Z_Construct_UClass_AHUD_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APawn_NoRegister();

	THEARENA_API class UEnum* Z_Construct_UEnum_TheArena_EShooterPhysMaterialType();
	THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_FTakeHitInfo();
	THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_FDecalData();
	THEARENA_API class UClass* Z_Construct_UClass_UArenaDamageType_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_UArenaDamageType();
	THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_AArenaCharacter_FPlayerData();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_GetAimOffsets();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_GetBaseMovementSpeed();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_GetCrouchedMovementSpeed();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_GetCurrentHealth();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_GetCurrentStamina();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_GetMaxHealth();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_GetMaxStamina();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_GetRunningMovementSpeed();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_GetTargetingMovementSpeed();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_GetWeapon();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_IsFiring();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_IsRunning();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_IsTargeting();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_OnRep_CurrentWeapon();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_OnRep_LastTakeHitInfo();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_ServerEquipWeapon();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_ServerSetCrouched();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_ServerSetRunning();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaCharacter_ServerSetTargeting();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaCharacter_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaCharacter();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaAI_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaAI();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaAIController_FindClosestEnemy();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaAIController_FindClosestEnemyWithLOS();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaAIController_ShootEnemy();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaAIController_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaAIController();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaGameSession_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaGameSession();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaPlayerState_InformAboutKill();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaPlayerState_OnRep_TeamColor();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaPlayerState_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaPlayerState();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaGameState_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaGameState();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaImpactEffect_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaImpactEffect();
	THEARENA_API class UClass* Z_Construct_UClass_UArenaLocalPlayer_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_UArenaLocalPlayer();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaPlayerCameraManager_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaPlayerCameraManager();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaPlayerController_ClientEndOnlineGame();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaPlayerController_ClientGameStarted();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaPlayerController_ClientStartOnlineGame();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaPlayerController_ServerSuicide();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaPlayerController_SetGodMode();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaPlayerController_Suicide();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaPlayerController_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaPlayerController();
	THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponAnim();
	THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponData();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_ClientStartReload();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_GetPawnOwner();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_OnRep_BurstCounter();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_OnRep_MyPawn();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_OnRep_Reload();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_ServerHandleFiring();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_ServerStartFire();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_ServerStartReload();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_ServerStopFire();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_ServerStopReload();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaRangedWeapon_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaRangedWeapon();
	THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_Projectile_FProjectileWeaponData();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_Projectile_ServerFireProjectile();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaRangedWeapon_Projectile_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaRangedWeapon_Projectile();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaProjectile_OnImpact();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaProjectile_OnRep_Exploded();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaProjectile_SetPawnOwner();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaProjectile_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaProjectile();
	THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantWeaponData();
	THEARENA_API class UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantHitInfo();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_Instant_OnRep_HitNotify();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_Instant_ServerNotifyHit();
	THEARENA_API class UFunction* Z_Construct_UFunction_AArenaRangedWeapon_Instant_ServerNotifyMiss();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaRangedWeapon_Instant_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_AArenaRangedWeapon_Instant();
	THEARENA_API class UClass* Z_Construct_UClass_UBTTask_FindPointNearEnemy_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_UBTTask_FindPointNearEnemy();
	THEARENA_API class UClass* Z_Construct_UClass_UBTTask_HasLosTo_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_UBTTask_HasLosTo();
	THEARENA_API class UFunction* Z_Construct_UFunction_ATheArenaGameMode_FinishMatch();
	THEARENA_API class UFunction* Z_Construct_UFunction_ATheArenaGameMode_SetAllowBots();
	THEARENA_API class UClass* Z_Construct_UClass_ATheArenaGameMode_NoRegister();
	THEARENA_API class UClass* Z_Construct_UClass_ATheArenaGameMode();
	THEARENA_API class UPackage* Z_Construct_UPackage_TheArena();
	UEnum* Z_Construct_UEnum_TheArena_EShooterPhysMaterialType()
	{
		UPackage* Outer=Z_Construct_UPackage_TheArena();
		static UEnum* ReturnEnum = NULL;
		if (!ReturnEnum)
		{
			ReturnEnum = new(Outer, TEXT("EShooterPhysMaterialType"), RF_Public|RF_Transient|RF_Native) UEnum(FPostConstructInitializeProperties());
			TArray<FName> EnumNames;
			EnumNames.Add(FName(TEXT("EShooterPhysMaterialType::Unknown")));
			EnumNames.Add(FName(TEXT("EShooterPhysMaterialType::Concrete")));
			EnumNames.Add(FName(TEXT("EShooterPhysMaterialType::Dirt")));
			EnumNames.Add(FName(TEXT("EShooterPhysMaterialType::Water")));
			EnumNames.Add(FName(TEXT("EShooterPhysMaterialType::Metal")));
			EnumNames.Add(FName(TEXT("EShooterPhysMaterialType::Wood")));
			EnumNames.Add(FName(TEXT("EShooterPhysMaterialType::Grass")));
			EnumNames.Add(FName(TEXT("EShooterPhysMaterialType::Glass")));
			EnumNames.Add(FName(TEXT("EShooterPhysMaterialType::Flesh")));
			EnumNames.Add(FName(TEXT("EShooterPhysMaterialType::EShooterPhysMaterialType_MAX")));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("keep in sync with ArenaImpactEffect"));
#endif
		}
		return ReturnEnum;
	}
	UScriptStruct* Z_Construct_UScriptStruct_FTakeHitInfo()
	{
		UPackage* Outer=Z_Construct_UPackage_TheArena();
		static UScriptStruct* ReturnStruct = NULL;
		if (!ReturnStruct)
		{
			ReturnStruct = new(Outer, TEXT("TakeHitInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FPostConstructInitializeProperties(), NULL, new UScriptStruct::TCppStructOps<FTakeHitInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_RadialDamageEvent = new(ReturnStruct, TEXT("RadialDamageEvent"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(RadialDamageEvent, FTakeHitInfo), 0x0000000000000000, Z_Construct_UScriptStruct_UEngineTypes_FRadialDamageEvent()); // 1982278809
			UProperty* NewProp_PointDamageEvent = new(ReturnStruct, TEXT("PointDamageEvent"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PointDamageEvent, FTakeHitInfo), 0x0000000000000000, Z_Construct_UScriptStruct_UEngineTypes_FPointDamageEvent()); // 942409284
			UProperty* NewProp_GeneralDamageEvent = new(ReturnStruct, TEXT("GeneralDamageEvent"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GeneralDamageEvent, FTakeHitInfo), 0x0000000000000000, Z_Construct_UScriptStruct_UEngineTypes_FDamageEvent()); // 1735714017
			UProperty* NewProp_EnsureReplicationByte = new(ReturnStruct, TEXT("EnsureReplicationByte"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(EnsureReplicationByte, FTakeHitInfo), 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bKilled, FTakeHitInfo, uint8);
			UProperty* NewProp_bKilled = new(ReturnStruct, TEXT("bKilled"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bKilled, FTakeHitInfo), 0x0000000000000000, CPP_BOOL_PROPERTY_BITMASK(bKilled, FTakeHitInfo), sizeof(uint8), false);
			UProperty* NewProp_DamageEventClassID = new(ReturnStruct, TEXT("DamageEventClassID"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(DamageEventClassID, FTakeHitInfo), 0x0000000000000000);
			UProperty* NewProp_DamageCauser = new(ReturnStruct, TEXT("DamageCauser"), RF_Public|RF_Transient|RF_Native) UWeakObjectProperty(CPP_PROPERTY_BASE(DamageCauser, FTakeHitInfo), 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_PawnInstigator = new(ReturnStruct, TEXT("PawnInstigator"), RF_Public|RF_Transient|RF_Native) UWeakObjectProperty(CPP_PROPERTY_BASE(PawnInstigator, FTakeHitInfo), 0x0000000000000000, Z_Construct_UClass_AArenaCharacter_NoRegister());
			UProperty* NewProp_DamageTypeClass = new(ReturnStruct, TEXT("DamageTypeClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(DamageTypeClass, FTakeHitInfo), 0x0000000000000000, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_ActualDamage = new(ReturnStruct, TEXT("ActualDamage"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ActualDamage, FTakeHitInfo), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("replicated information on a hit we've taken"));
			MetaData->SetValue(NewProp_RadialDamageEvent, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_RadialDamageEvent, TEXT("ToolTip"), TEXT("Describes radial damage, if that is what was received."));
			MetaData->SetValue(NewProp_PointDamageEvent, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_PointDamageEvent, TEXT("ToolTip"), TEXT("Describes point damage, if that is what was received."));
			MetaData->SetValue(NewProp_GeneralDamageEvent, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_GeneralDamageEvent, TEXT("ToolTip"), TEXT("Describes general damage."));
			MetaData->SetValue(NewProp_EnsureReplicationByte, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_EnsureReplicationByte, TEXT("ToolTip"), TEXT("A rolling counter used to ensure the struct is dirty and will replicate."));
			MetaData->SetValue(NewProp_bKilled, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_bKilled, TEXT("ToolTip"), TEXT("Rather this was a kill"));
			MetaData->SetValue(NewProp_DamageEventClassID, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_DamageEventClassID, TEXT("ToolTip"), TEXT("Specifies which DamageEvent below describes the damage received."));
			MetaData->SetValue(NewProp_DamageCauser, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_DamageCauser, TEXT("ToolTip"), TEXT("Who actually caused the damage"));
			MetaData->SetValue(NewProp_PawnInstigator, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_PawnInstigator, TEXT("ToolTip"), TEXT("Who hit us"));
			MetaData->SetValue(NewProp_DamageTypeClass, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_DamageTypeClass, TEXT("ToolTip"), TEXT("The damage type we were hit with."));
			MetaData->SetValue(NewProp_ActualDamage, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_ActualDamage, TEXT("ToolTip"), TEXT("The amount of damage actually applied"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC() { return 1890597861U; }
	UScriptStruct* Z_Construct_UScriptStruct_FDecalData()
	{
		UPackage* Outer=Z_Construct_UPackage_TheArena();
		static UScriptStruct* ReturnStruct = NULL;
		if (!ReturnStruct)
		{
			ReturnStruct = new(Outer, TEXT("DecalData"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FPostConstructInitializeProperties(), NULL, new UScriptStruct::TCppStructOps<FDecalData>, EStructFlags(0x00000001));
			UProperty* NewProp_LifeSpan = new(ReturnStruct, TEXT("LifeSpan"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(LifeSpan, FDecalData), 0x0000000000010001);
			UProperty* NewProp_DecalSize = new(ReturnStruct, TEXT("DecalSize"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DecalSize, FDecalData), 0x0000000000010001);
			UProperty* NewProp_DecalMaterial = new(ReturnStruct, TEXT("DecalMaterial"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(DecalMaterial, FDecalData), 0x0000000000010001, Z_Construct_UClass_UMaterial_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_LifeSpan, TEXT("Category"), TEXT("Decal"));
			MetaData->SetValue(NewProp_LifeSpan, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_LifeSpan, TEXT("ToolTip"), TEXT("lifespan"));
			MetaData->SetValue(NewProp_DecalSize, TEXT("Category"), TEXT("Decal"));
			MetaData->SetValue(NewProp_DecalSize, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_DecalSize, TEXT("ToolTip"), TEXT("quad size (width & height)"));
			MetaData->SetValue(NewProp_DecalMaterial, TEXT("Category"), TEXT("Decal"));
			MetaData->SetValue(NewProp_DecalMaterial, TEXT("ModuleRelativePath"), TEXT("Public/ArenaTypes.h"));
			MetaData->SetValue(NewProp_DecalMaterial, TEXT("ToolTip"), TEXT("material"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FDecalData_CRC() { return 4078626812U; }
	UClass* Z_Construct_UClass_UArenaDamageType_NoRegister()
	{
		return UArenaDamageType::StaticClass();
	}
	UClass* Z_Construct_UClass_UArenaDamageType()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDamageType();
			Z_Construct_UPackage_TheArena();
			OuterClass = UArenaDamageType::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00110080;


			UProperty* NewProp_KilledForceFeedback = new(OuterClass, TEXT("KilledForceFeedback"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(KilledForceFeedback, UArenaDamageType), 0x0000000000010011, Z_Construct_UClass_UForceFeedbackEffect_NoRegister());
			UProperty* NewProp_HitForceFeedback = new(OuterClass, TEXT("HitForceFeedback"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(HitForceFeedback, UArenaDamageType), 0x0000000000010011, Z_Construct_UClass_UForceFeedbackEffect_NoRegister());
			UProperty* NewProp_KillIcon = new(OuterClass, TEXT("KillIcon"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(KillIcon, UArenaDamageType), 0x0000000000010011, Z_Construct_UScriptStruct_UCanvas_FCanvasIcon()); // 2330067727
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/ArenaDamageType.h"));
			MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaDamageType.h"));
			MetaData->SetValue(NewProp_KilledForceFeedback, TEXT("Category"), TEXT("Effects"));
			MetaData->SetValue(NewProp_KilledForceFeedback, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaDamageType.h"));
			MetaData->SetValue(NewProp_KilledForceFeedback, TEXT("ToolTip"), TEXT("force feedback effect to play on a player killed by this damage type"));
			MetaData->SetValue(NewProp_HitForceFeedback, TEXT("Category"), TEXT("Effects"));
			MetaData->SetValue(NewProp_HitForceFeedback, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaDamageType.h"));
			MetaData->SetValue(NewProp_HitForceFeedback, TEXT("ToolTip"), TEXT("force feedback effect to play on a player hit by this damage type"));
			MetaData->SetValue(NewProp_KillIcon, TEXT("Category"), TEXT("HUD"));
			MetaData->SetValue(NewProp_KillIcon, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaDamageType.h"));
			MetaData->SetValue(NewProp_KillIcon, TEXT("ToolTip"), TEXT("icon displayed in death messages log when killed with this weapon"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UArenaDamageType(Z_Construct_UClass_UArenaDamageType, TEXT("UArenaDamageType"));
	UScriptStruct* Z_Construct_UScriptStruct_AArenaCharacter_FPlayerData()
	{
		UStruct* Outer=Z_Construct_UClass_AArenaCharacter();
		static UScriptStruct* ReturnStruct = NULL;
		if (!ReturnStruct)
		{
			ReturnStruct = new(Outer, TEXT("PlayerData"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FPostConstructInitializeProperties(), NULL, new UScriptStruct::TCppStructOps<FPlayerData>, EStructFlags(0x00000001));
			UProperty* NewProp_LowShieldPercentage = new(ReturnStruct, TEXT("LowShieldPercentage"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(LowShieldPercentage, FPlayerData), 0x0000000000000005);
			UProperty* NewProp_LowEnergyPercentage = new(ReturnStruct, TEXT("LowEnergyPercentage"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(LowEnergyPercentage, FPlayerData), 0x0000000000000005);
			UProperty* NewProp_LowStaminaPercentage = new(ReturnStruct, TEXT("LowStaminaPercentage"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(LowStaminaPercentage, FPlayerData), 0x0000000000000005);
			UProperty* NewProp_LowHealthPercentage = new(ReturnStruct, TEXT("LowHealthPercentage"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(LowHealthPercentage, FPlayerData), 0x0000000000000005);
			UProperty* NewProp_ShieldRegen = new(ReturnStruct, TEXT("ShieldRegen"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ShieldRegen, FPlayerData), 0x0000000000000005);
			UProperty* NewProp_EnergyRegen = new(ReturnStruct, TEXT("EnergyRegen"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(EnergyRegen, FPlayerData), 0x0000000000000005);
			UProperty* NewProp_StaminaRegen = new(ReturnStruct, TEXT("StaminaRegen"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(StaminaRegen, FPlayerData), 0x0000000000000005);
			UProperty* NewProp_HealthRegen = new(ReturnStruct, TEXT("HealthRegen"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(HealthRegen, FPlayerData), 0x0000000000000005);
			UProperty* NewProp_Shield = new(ReturnStruct, TEXT("Shield"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Shield, FPlayerData), 0x0000000000000005);
			UProperty* NewProp_Energy = new(ReturnStruct, TEXT("Energy"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Energy, FPlayerData), 0x0000000000000005);
			UProperty* NewProp_Stamina = new(ReturnStruct, TEXT("Stamina"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Stamina, FPlayerData), 0x0000000000000005);
			UProperty* NewProp_Health = new(ReturnStruct, TEXT("Health"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Health, FPlayerData), 0x0000000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LowShieldPercentage, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_LowShieldPercentage, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LowShieldPercentage, TEXT("ToolTip"), TEXT("The percentage of shield when low shield effects should start"));
			MetaData->SetValue(NewProp_LowEnergyPercentage, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_LowEnergyPercentage, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LowEnergyPercentage, TEXT("ToolTip"), TEXT("The percentage of energy when low energy effects should start"));
			MetaData->SetValue(NewProp_LowStaminaPercentage, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_LowStaminaPercentage, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LowStaminaPercentage, TEXT("ToolTip"), TEXT("The percentage of stamina when low stamina effects should start"));
			MetaData->SetValue(NewProp_LowHealthPercentage, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_LowHealthPercentage, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LowHealthPercentage, TEXT("ToolTip"), TEXT("The percentage of health when low health effects should start"));
			MetaData->SetValue(NewProp_ShieldRegen, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_ShieldRegen, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_ShieldRegen, TEXT("ToolTip"), TEXT("Rate of shield regeneration"));
			MetaData->SetValue(NewProp_EnergyRegen, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_EnergyRegen, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_EnergyRegen, TEXT("ToolTip"), TEXT("Rate of energy regeneration"));
			MetaData->SetValue(NewProp_StaminaRegen, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_StaminaRegen, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_StaminaRegen, TEXT("ToolTip"), TEXT("Rate of stamina regeneration"));
			MetaData->SetValue(NewProp_HealthRegen, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_HealthRegen, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_HealthRegen, TEXT("ToolTip"), TEXT("Rate of health regeneration"));
			MetaData->SetValue(NewProp_Shield, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_Shield, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_Shield, TEXT("ToolTip"), TEXT("Current Shield of the Pawn"));
			MetaData->SetValue(NewProp_Energy, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_Energy, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_Energy, TEXT("ToolTip"), TEXT("Current Energy of the Pawn"));
			MetaData->SetValue(NewProp_Stamina, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_Stamina, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_Stamina, TEXT("ToolTip"), TEXT("Current Stamina of the Pawn"));
			MetaData->SetValue(NewProp_Health, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_Health, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_Health, TEXT("ToolTip"), TEXT("Current health of the Pawn"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_AArenaCharacter_FPlayerData_CRC() { return 2205019966U; }
	UFunction* Z_Construct_UFunction_AArenaCharacter_GetAimOffsets()
	{
		struct ArenaCharacter_eventGetAimOffsets_Parms
		{
			FRotator ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetAimOffsets"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54820401, 65535, sizeof(ArenaCharacter_eventGetAimOffsets_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, ArenaCharacter_eventGetAimOffsets_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_UObject_FRotator()); // 584624545
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Weapon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get aim offsets"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_GetBaseMovementSpeed()
	{
		struct ArenaCharacter_eventGetBaseMovementSpeed_Parms
		{
			float ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetBaseMovementSpeed"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54020401, 65535, sizeof(ArenaCharacter_eventGetBaseMovementSpeed_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, ArenaCharacter_eventGetBaseMovementSpeed_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Pawn"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get the base movement speed"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_GetCrouchedMovementSpeed()
	{
		struct ArenaCharacter_eventGetCrouchedMovementSpeed_Parms
		{
			float ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetCrouchedMovementSpeed"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54020401, 65535, sizeof(ArenaCharacter_eventGetCrouchedMovementSpeed_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, ArenaCharacter_eventGetCrouchedMovementSpeed_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Pawn"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get the new value for running speed"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_GetCurrentHealth()
	{
		struct ArenaCharacter_eventGetCurrentHealth_Parms
		{
			float ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetCurrentHealth"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54020401, 65535, sizeof(ArenaCharacter_eventGetCurrentHealth_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, ArenaCharacter_eventGetCurrentHealth_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get current health"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_GetCurrentStamina()
	{
		struct ArenaCharacter_eventGetCurrentStamina_Parms
		{
			float ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetCurrentStamina"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54020401, 65535, sizeof(ArenaCharacter_eventGetCurrentStamina_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, ArenaCharacter_eventGetCurrentStamina_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get current stamina"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_GetMaxHealth()
	{
		struct ArenaCharacter_eventGetMaxHealth_Parms
		{
			int32 ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetMaxHealth"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54020401, 65535, sizeof(ArenaCharacter_eventGetMaxHealth_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, ArenaCharacter_eventGetMaxHealth_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get max health"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_GetMaxStamina()
	{
		struct ArenaCharacter_eventGetMaxStamina_Parms
		{
			int32 ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetMaxStamina"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54020401, 65535, sizeof(ArenaCharacter_eventGetMaxStamina_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, ArenaCharacter_eventGetMaxStamina_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get max stamina"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_GetRunningMovementSpeed()
	{
		struct ArenaCharacter_eventGetRunningMovementSpeed_Parms
		{
			float ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetRunningMovementSpeed"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54020401, 65535, sizeof(ArenaCharacter_eventGetRunningMovementSpeed_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, ArenaCharacter_eventGetRunningMovementSpeed_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Pawn"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get the new value for running speed"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_GetTargetingMovementSpeed()
	{
		struct ArenaCharacter_eventGetTargetingMovementSpeed_Parms
		{
			float ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetTargetingMovementSpeed"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54020401, 65535, sizeof(ArenaCharacter_eventGetTargetingMovementSpeed_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, ArenaCharacter_eventGetTargetingMovementSpeed_Parms), 0x0000000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Weapon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get the new value for weapon target speed"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_GetWeapon()
	{
		struct ArenaCharacter_eventGetWeapon_Parms
		{
			class AArenaRangedWeapon* ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetWeapon"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54020401, 65535, sizeof(ArenaCharacter_eventGetWeapon_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, ArenaCharacter_eventGetWeapon_Parms), 0x0000000000000580, Z_Construct_UClass_AArenaRangedWeapon_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Weapon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get currently equipped weapon"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_IsFiring()
	{
		struct ArenaCharacter_eventIsFiring_Parms
		{
			bool ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("IsFiring"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54020401, 65535, sizeof(ArenaCharacter_eventIsFiring_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, ArenaCharacter_eventIsFiring_Parms, bool);
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, ArenaCharacter_eventIsFiring_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, ArenaCharacter_eventIsFiring_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Weapon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get firing state"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_IsRunning()
	{
		struct ArenaCharacter_eventIsRunning_Parms
		{
			bool ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("IsRunning"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54020401, 65535, sizeof(ArenaCharacter_eventIsRunning_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, ArenaCharacter_eventIsRunning_Parms, bool);
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, ArenaCharacter_eventIsRunning_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, ArenaCharacter_eventIsRunning_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Pawn"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get running state"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_IsTargeting()
	{
		struct ArenaCharacter_eventIsTargeting_Parms
		{
			bool ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("IsTargeting"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54020401, 65535, sizeof(ArenaCharacter_eventIsTargeting_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, ArenaCharacter_eventIsTargeting_Parms, bool);
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, ArenaCharacter_eventIsTargeting_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, ArenaCharacter_eventIsTargeting_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Weapon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get targeting state"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_OnRep_CurrentWeapon()
	{
		struct ArenaCharacter_eventOnRep_CurrentWeapon_Parms
		{
			class AArenaRangedWeapon* LastWeapon;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("OnRep_CurrentWeapon"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00080401, 65535, sizeof(ArenaCharacter_eventOnRep_CurrentWeapon_Parms));
			UProperty* NewProp_LastWeapon = new(ReturnFunction, TEXT("LastWeapon"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(LastWeapon, ArenaCharacter_eventOnRep_CurrentWeapon_Parms), 0x0000000000000080, Z_Construct_UClass_AArenaRangedWeapon_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("current weapon rep handler"));
			MetaData->SetValue(NewProp_LastWeapon, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_OnRep_LastTakeHitInfo()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("OnRep_LastTakeHitInfo"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("play hit or death on client"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_ServerEquipWeapon()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ServerEquipWeapon"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x80280CC0, 65535, sizeof(ArenaCharacter_eventServerEquipWeapon_Parms));
			UProperty* NewProp_NewWeapon = new(ReturnFunction, TEXT("NewWeapon"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(NewWeapon, ArenaCharacter_eventServerEquipWeapon_Parms), 0x0000000000000080, Z_Construct_UClass_AArenaRangedWeapon_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("equip weapon"));
			MetaData->SetValue(NewProp_NewWeapon, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_ServerSetCrouched()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ServerSetCrouched"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x80280CC0, 65535, sizeof(ArenaCharacter_eventServerSetCrouched_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bToggle, ArenaCharacter_eventServerSetCrouched_Parms, bool);
			UProperty* NewProp_bToggle = new(ReturnFunction, TEXT("bToggle"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bToggle, ArenaCharacter_eventServerSetCrouched_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bToggle, ArenaCharacter_eventServerSetCrouched_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNewCrouched, ArenaCharacter_eventServerSetCrouched_Parms, bool);
			UProperty* NewProp_bNewCrouched = new(ReturnFunction, TEXT("bNewCrouched"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNewCrouched, ArenaCharacter_eventServerSetCrouched_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bNewCrouched, ArenaCharacter_eventServerSetCrouched_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("update targeting state"));
			MetaData->SetValue(NewProp_bToggle, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_bNewCrouched, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_ServerSetRunning()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ServerSetRunning"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x80280CC0, 65535, sizeof(ArenaCharacter_eventServerSetRunning_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bToggle, ArenaCharacter_eventServerSetRunning_Parms, bool);
			UProperty* NewProp_bToggle = new(ReturnFunction, TEXT("bToggle"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bToggle, ArenaCharacter_eventServerSetRunning_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bToggle, ArenaCharacter_eventServerSetRunning_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNewRunning, ArenaCharacter_eventServerSetRunning_Parms, bool);
			UProperty* NewProp_bNewRunning = new(ReturnFunction, TEXT("bNewRunning"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNewRunning, ArenaCharacter_eventServerSetRunning_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bNewRunning, ArenaCharacter_eventServerSetRunning_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("update targeting state"));
			MetaData->SetValue(NewProp_bToggle, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_bNewRunning, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaCharacter_ServerSetTargeting()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ServerSetTargeting"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x80280CC0, 65535, sizeof(ArenaCharacter_eventServerSetTargeting_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNewTargeting, ArenaCharacter_eventServerSetTargeting_Parms, bool);
			UProperty* NewProp_bNewTargeting = new(ReturnFunction, TEXT("bNewTargeting"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNewTargeting, ArenaCharacter_eventServerSetTargeting_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bNewTargeting, ArenaCharacter_eventServerSetTargeting_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("update targeting state"));
			MetaData->SetValue(NewProp_bNewTargeting, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AArenaCharacter_NoRegister()
	{
		return AArenaCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AArenaCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage_TheArena();
			OuterClass = AArenaCharacter::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00800081;

			OuterClass->LinkChild(Z_Construct_UScriptStruct_AArenaCharacter_FPlayerData()); // 2205019966
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_GetAimOffsets());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_GetBaseMovementSpeed());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_GetCrouchedMovementSpeed());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_GetCurrentHealth());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_GetCurrentStamina());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_GetMaxHealth());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_GetMaxStamina());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_GetRunningMovementSpeed());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_GetTargetingMovementSpeed());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_GetWeapon());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_IsFiring());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_IsRunning());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_IsTargeting());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_OnRep_CurrentWeapon());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_OnRep_LastTakeHitInfo());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_ServerEquipWeapon());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_ServerSetCrouched());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_ServerSetRunning());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaCharacter_ServerSetTargeting());

			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHasEnergyGenerator, AArenaCharacter, uint8);
			UProperty* NewProp_bHasEnergyGenerator = new(OuterClass, TEXT("bHasEnergyGenerator"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHasEnergyGenerator, AArenaCharacter), 0x0000000000020015, CPP_BOOL_PROPERTY_BITMASK(bHasEnergyGenerator, AArenaCharacter), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHasShield, AArenaCharacter, uint8);
			UProperty* NewProp_bHasShield = new(OuterClass, TEXT("bHasShield"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHasShield, AArenaCharacter), 0x0000000000020015, CPP_BOOL_PROPERTY_BITMASK(bHasShield, AArenaCharacter), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsDying, AArenaCharacter, uint8);
			UProperty* NewProp_bIsDying = new(OuterClass, TEXT("bIsDying"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsDying, AArenaCharacter), 0x0000000000020015, CPP_BOOL_PROPERTY_BITMASK(bIsDying, AArenaCharacter), sizeof(uint8), false);
			UProperty* NewProp_LowShieldWarningPlayer = new(OuterClass, TEXT("LowShieldWarningPlayer"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(LowShieldWarningPlayer, AArenaCharacter), 0x0000080004080008, Z_Construct_UClass_UAudioComponent_NoRegister());
			UProperty* NewProp_LowEnergyWarningPlayer = new(OuterClass, TEXT("LowEnergyWarningPlayer"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(LowEnergyWarningPlayer, AArenaCharacter), 0x0000080004080008, Z_Construct_UClass_UAudioComponent_NoRegister());
			UProperty* NewProp_LowStaminaWarningPlayer = new(OuterClass, TEXT("LowStaminaWarningPlayer"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(LowStaminaWarningPlayer, AArenaCharacter), 0x0000080004080008, Z_Construct_UClass_UAudioComponent_NoRegister());
			UProperty* NewProp_LowHealthWarningPlayer = new(OuterClass, TEXT("LowHealthWarningPlayer"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(LowHealthWarningPlayer, AArenaCharacter), 0x0000080004080008, Z_Construct_UClass_UAudioComponent_NoRegister());
			UProperty* NewProp_RunLoopAC = new(OuterClass, TEXT("RunLoopAC"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(RunLoopAC, AArenaCharacter), 0x0000080004080008, Z_Construct_UClass_UAudioComponent_NoRegister());
			UProperty* NewProp_TargetingSound = new(OuterClass, TEXT("TargetingSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TargetingSound, AArenaCharacter), 0x0000080000010001, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_RunStopSound = new(OuterClass, TEXT("RunStopSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(RunStopSound, AArenaCharacter), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_RunLoopSound = new(OuterClass, TEXT("RunLoopSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(RunLoopSound, AArenaCharacter), 0x0000080000010001, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_LowShieldSound = new(OuterClass, TEXT("LowShieldSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(LowShieldSound, AArenaCharacter), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_LowEnergySound = new(OuterClass, TEXT("LowEnergySound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(LowEnergySound, AArenaCharacter), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_LowStaminaSound = new(OuterClass, TEXT("LowStaminaSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(LowStaminaSound, AArenaCharacter), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_LowHealthSound = new(OuterClass, TEXT("LowHealthSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(LowHealthSound, AArenaCharacter), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_RespawnSound = new(OuterClass, TEXT("RespawnSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(RespawnSound, AArenaCharacter), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_RespawnFX = new(OuterClass, TEXT("RespawnFX"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(RespawnFX, AArenaCharacter), 0x0000080000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
			UProperty* NewProp_DeathSound = new(OuterClass, TEXT("DeathSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(DeathSound, AArenaCharacter), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_MeshMIDs = new(OuterClass, TEXT("MeshMIDs"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(MeshMIDs, AArenaCharacter), 0x0000080000002000);
			UProperty* NewProp_MeshMIDs_Inner = new(NewProp_MeshMIDs, TEXT("MeshMIDs"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FPostConstructInitializeProperties(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UMaterialInstanceDynamic_NoRegister());
			UProperty* NewProp_BaseLookUpRate = new(OuterClass, TEXT("BaseLookUpRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(BaseLookUpRate, AArenaCharacter), 0x0000080000000000);
			UProperty* NewProp_BaseTurnRate = new(OuterClass, TEXT("BaseTurnRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(BaseTurnRate, AArenaCharacter), 0x0000080000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bWantsToCrouch, AArenaCharacter, uint8);
			UProperty* NewProp_bWantsToCrouch = new(OuterClass, TEXT("bWantsToCrouch"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bWantsToCrouch, AArenaCharacter), 0x0000080000002000, CPP_BOOL_PROPERTY_BITMASK(bWantsToCrouch, AArenaCharacter), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bWantsToRun, AArenaCharacter, uint8);
			UProperty* NewProp_bWantsToRun = new(OuterClass, TEXT("bWantsToRun"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bWantsToRun, AArenaCharacter), 0x0000080000002000, CPP_BOOL_PROPERTY_BITMASK(bWantsToRun, AArenaCharacter), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsTargeting, AArenaCharacter, uint8);
			UProperty* NewProp_bIsTargeting = new(OuterClass, TEXT("bIsTargeting"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsTargeting, AArenaCharacter), 0x0000080000002000, CPP_BOOL_PROPERTY_BITMASK(bIsTargeting, AArenaCharacter), sizeof(uint8), false);
			UProperty* NewProp_LastTakeHitInfo = new(OuterClass, TEXT("LastTakeHitInfo"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(LastTakeHitInfo, AArenaCharacter), 0x0000080100002020, Z_Construct_UScriptStruct_FTakeHitInfo()); // 1890597861
			NewProp_LastTakeHitInfo->RepNotifyFunc = FName(TEXT("OnRep_LastTakeHitInfo"));
			UProperty* NewProp_CurrentWeapon = new(OuterClass, TEXT("CurrentWeapon"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CurrentWeapon, AArenaCharacter), 0x0000080100002020, Z_Construct_UClass_AArenaRangedWeapon_NoRegister());
			NewProp_CurrentWeapon->RepNotifyFunc = FName(TEXT("OnRep_CurrentWeapon"));
			UProperty* NewProp_Inventory = new(OuterClass, TEXT("Inventory"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Inventory, AArenaCharacter), 0x0000080000002000);
			UProperty* NewProp_Inventory_Inner = new(NewProp_Inventory, TEXT("Inventory"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FPostConstructInitializeProperties(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AArenaRangedWeapon_NoRegister());
			UProperty* NewProp_DefaultInventoryClasses = new(OuterClass, TEXT("DefaultInventoryClasses"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(DefaultInventoryClasses, AArenaCharacter), 0x0000080000010001);
			UProperty* NewProp_DefaultInventoryClasses_Inner = new(NewProp_DefaultInventoryClasses, TEXT("DefaultInventoryClasses"), RF_Public|RF_Transient|RF_Native) UClassProperty(FPostConstructInitializeProperties(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AArenaRangedWeapon_NoRegister());
			UProperty* NewProp_WeaponAttachPoint = new(OuterClass, TEXT("WeaponAttachPoint"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(WeaponAttachPoint, AArenaCharacter), 0x0000080000010001);
			UProperty* NewProp_PlayerConfig = new(OuterClass, TEXT("PlayerConfig"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(PlayerConfig, AArenaCharacter), 0x0000080000010001, Z_Construct_UScriptStruct_AArenaCharacter_FPlayerData()); // 2205019966
			UProperty* NewProp_TargetingMovementSpeed = new(OuterClass, TEXT("TargetingMovementSpeed"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(TargetingMovementSpeed, AArenaCharacter), 0x0000000000010001);
			UProperty* NewProp_DodgeCost = new(OuterClass, TEXT("DodgeCost"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DodgeCost, AArenaCharacter), 0x0000000000000005);
			UProperty* NewProp_JumpCost = new(OuterClass, TEXT("JumpCost"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(JumpCost, AArenaCharacter), 0x0000000000000005);
			UProperty* NewProp_SprintCost = new(OuterClass, TEXT("SprintCost"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SprintCost, AArenaCharacter), 0x0000000000000005);
			UProperty* NewProp_CrouchedMovementSpeed = new(OuterClass, TEXT("CrouchedMovementSpeed"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(CrouchedMovementSpeed, AArenaCharacter), 0x0000000000010001);
			UProperty* NewProp_RunningMovementSpeed = new(OuterClass, TEXT("RunningMovementSpeed"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(RunningMovementSpeed, AArenaCharacter), 0x0000000000010001);
			UProperty* NewProp_BaseMovementSpeed = new(OuterClass, TEXT("BaseMovementSpeed"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(BaseMovementSpeed, AArenaCharacter), 0x0000000000000005);
			UProperty* NewProp_FollowCamera = new(OuterClass, TEXT("FollowCamera"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FollowCamera, AArenaCharacter), 0x0000000004480008, Z_Construct_UClass_UCameraComponent_NoRegister());
			UProperty* NewProp_CameraBoom = new(OuterClass, TEXT("CameraBoom"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CameraBoom, AArenaCharacter), 0x0000000004480008, Z_Construct_UClass_USpringArmComponent_NoRegister());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_GetAimOffsets());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_GetBaseMovementSpeed());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_GetCrouchedMovementSpeed());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_GetCurrentHealth());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_GetCurrentStamina());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_GetMaxHealth());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_GetMaxStamina());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_GetRunningMovementSpeed());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_GetTargetingMovementSpeed());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_GetWeapon());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_IsFiring());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_IsRunning());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_IsTargeting());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_OnRep_CurrentWeapon());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_OnRep_LastTakeHitInfo());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_ServerEquipWeapon());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_ServerSetCrouched());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_ServerSetRunning());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaCharacter_ServerSetTargeting());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation AI|Navigation Pawn|Character|InternalEvents"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Player/ArenaCharacter.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_bHasEnergyGenerator, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_bHasEnergyGenerator, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_bHasEnergyGenerator, TEXT("ToolTip"), TEXT("Identifies if pawn is in its dying state"));
			MetaData->SetValue(NewProp_bHasShield, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_bHasShield, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_bHasShield, TEXT("ToolTip"), TEXT("Identifies if pawn is in its dying state"));
			MetaData->SetValue(NewProp_bIsDying, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_bIsDying, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_bIsDying, TEXT("ToolTip"), TEXT("Identifies if pawn is in its dying state"));
			MetaData->SetValue(NewProp_LowShieldWarningPlayer, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LowShieldWarningPlayer, TEXT("ToolTip"), TEXT("hook to looped low shield sound used to stop/adjust volume"));
			MetaData->SetValue(NewProp_LowEnergyWarningPlayer, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LowEnergyWarningPlayer, TEXT("ToolTip"), TEXT("hook to looped low energy sound used to stop/adjust volume"));
			MetaData->SetValue(NewProp_LowStaminaWarningPlayer, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LowStaminaWarningPlayer, TEXT("ToolTip"), TEXT("hook to looped low stamina sound used to stop/adjust volume"));
			MetaData->SetValue(NewProp_LowHealthWarningPlayer, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LowHealthWarningPlayer, TEXT("ToolTip"), TEXT("hook to looped low health sound used to stop/adjust volume"));
			MetaData->SetValue(NewProp_RunLoopAC, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_RunLoopAC, TEXT("ToolTip"), TEXT("manipulates run loop sound"));
			MetaData->SetValue(NewProp_TargetingSound, TEXT("Category"), TEXT("Aesthetics"));
			MetaData->SetValue(NewProp_TargetingSound, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_TargetingSound, TEXT("ToolTip"), TEXT("sound played when targeting state changes"));
			MetaData->SetValue(NewProp_RunStopSound, TEXT("Category"), TEXT("Aesthetics"));
			MetaData->SetValue(NewProp_RunStopSound, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_RunStopSound, TEXT("ToolTip"), TEXT("create property for running end sound cue !currently broken!"));
			MetaData->SetValue(NewProp_RunLoopSound, TEXT("Category"), TEXT("Aesthetics"));
			MetaData->SetValue(NewProp_RunLoopSound, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_RunLoopSound, TEXT("ToolTip"), TEXT("create property for running loop sound cue"));
			MetaData->SetValue(NewProp_LowShieldSound, TEXT("Category"), TEXT("Aesthetics"));
			MetaData->SetValue(NewProp_LowShieldSound, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LowShieldSound, TEXT("ToolTip"), TEXT("sound played when shield is low"));
			MetaData->SetValue(NewProp_LowEnergySound, TEXT("Category"), TEXT("Aesthetics"));
			MetaData->SetValue(NewProp_LowEnergySound, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LowEnergySound, TEXT("ToolTip"), TEXT("sound played when energy is low"));
			MetaData->SetValue(NewProp_LowStaminaSound, TEXT("Category"), TEXT("Aesthetics"));
			MetaData->SetValue(NewProp_LowStaminaSound, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LowStaminaSound, TEXT("ToolTip"), TEXT("sound played when stamina is low"));
			MetaData->SetValue(NewProp_LowHealthSound, TEXT("Category"), TEXT("Aesthetics"));
			MetaData->SetValue(NewProp_LowHealthSound, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LowHealthSound, TEXT("ToolTip"), TEXT("sound played when health is low"));
			MetaData->SetValue(NewProp_RespawnSound, TEXT("Category"), TEXT("Aesthetics"));
			MetaData->SetValue(NewProp_RespawnSound, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_RespawnSound, TEXT("ToolTip"), TEXT("sound played on respawn"));
			MetaData->SetValue(NewProp_RespawnFX, TEXT("Category"), TEXT("Aesthetics"));
			MetaData->SetValue(NewProp_RespawnFX, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_RespawnFX, TEXT("ToolTip"), TEXT("effect played on respawn"));
			MetaData->SetValue(NewProp_DeathSound, TEXT("Category"), TEXT("Aesthetics"));
			MetaData->SetValue(NewProp_DeathSound, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_DeathSound, TEXT("ToolTip"), TEXT("sound played on death, local player only"));
			MetaData->SetValue(NewProp_MeshMIDs, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_MeshMIDs, TEXT("ToolTip"), TEXT("material instances for setting team color in mesh (3rd person view)"));
			MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ToolTip"), TEXT("Base look up/down rate, in deg/sec. Other scaling may affect final rate."));
			MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ToolTip"), TEXT("Base turn rate, in deg/sec. Other scaling may affect final turn rate."));
			MetaData->SetValue(NewProp_bWantsToCrouch, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_bWantsToCrouch, TEXT("ToolTip"), TEXT("current crouch state"));
			MetaData->SetValue(NewProp_bWantsToRun, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_bWantsToRun, TEXT("ToolTip"), TEXT("current running state"));
			MetaData->SetValue(NewProp_bIsTargeting, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_bIsTargeting, TEXT("ToolTip"), TEXT("current targeting state"));
			MetaData->SetValue(NewProp_LastTakeHitInfo, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_LastTakeHitInfo, TEXT("ToolTip"), TEXT("Replicate where this pawn was last hit and damaged"));
			MetaData->SetValue(NewProp_CurrentWeapon, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_CurrentWeapon, TEXT("ToolTip"), TEXT("currently equipped weapon"));
			MetaData->SetValue(NewProp_Inventory, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_Inventory, TEXT("ToolTip"), TEXT("weapons in inventory"));
			MetaData->SetValue(NewProp_DefaultInventoryClasses, TEXT("Category"), TEXT("Inventory"));
			MetaData->SetValue(NewProp_DefaultInventoryClasses, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_DefaultInventoryClasses, TEXT("ToolTip"), TEXT("default inventory list"));
			MetaData->SetValue(NewProp_WeaponAttachPoint, TEXT("Category"), TEXT("Inventory"));
			MetaData->SetValue(NewProp_WeaponAttachPoint, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_WeaponAttachPoint, TEXT("ToolTip"), TEXT("socket or bone name for attaching weapon mesh"));
			MetaData->SetValue(NewProp_PlayerConfig, TEXT("Category"), TEXT("Resources"));
			MetaData->SetValue(NewProp_PlayerConfig, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_PlayerConfig, TEXT("ToolTip"), TEXT("weapon data"));
			MetaData->SetValue(NewProp_TargetingMovementSpeed, TEXT("Category"), TEXT("Game|Weapon"));
			MetaData->SetValue(NewProp_TargetingMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_TargetingMovementSpeed, TEXT("ToolTip"), TEXT("replaces max movement speed"));
			MetaData->SetValue(NewProp_DodgeCost, TEXT("Category"), TEXT("Pawn"));
			MetaData->SetValue(NewProp_DodgeCost, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_DodgeCost, TEXT("ToolTip"), TEXT("replaces max movement speed"));
			MetaData->SetValue(NewProp_JumpCost, TEXT("Category"), TEXT("Pawn"));
			MetaData->SetValue(NewProp_JumpCost, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_JumpCost, TEXT("ToolTip"), TEXT("replaces max movement speed"));
			MetaData->SetValue(NewProp_SprintCost, TEXT("Category"), TEXT("Pawn"));
			MetaData->SetValue(NewProp_SprintCost, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_SprintCost, TEXT("ToolTip"), TEXT("replaces max movement speed"));
			MetaData->SetValue(NewProp_CrouchedMovementSpeed, TEXT("Category"), TEXT("Pawn"));
			MetaData->SetValue(NewProp_CrouchedMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_CrouchedMovementSpeed, TEXT("ToolTip"), TEXT("replaces max movement speed"));
			MetaData->SetValue(NewProp_RunningMovementSpeed, TEXT("Category"), TEXT("Pawn"));
			MetaData->SetValue(NewProp_RunningMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_RunningMovementSpeed, TEXT("ToolTip"), TEXT("replaces max movement speed"));
			MetaData->SetValue(NewProp_BaseMovementSpeed, TEXT("Category"), TEXT("Pawn"));
			MetaData->SetValue(NewProp_BaseMovementSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_BaseMovementSpeed, TEXT("ToolTip"), TEXT("set the default movement speed"));
			MetaData->SetValue(NewProp_FollowCamera, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_FollowCamera, TEXT("ToolTip"), TEXT("Follow camera"));
			MetaData->SetValue(NewProp_CameraBoom, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaCharacter.h"));
			MetaData->SetValue(NewProp_CameraBoom, TEXT("ToolTip"), TEXT("Camera boom positioning the camera behind the character"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AArenaCharacter(Z_Construct_UClass_AArenaCharacter, TEXT("AArenaCharacter"));
	UClass* Z_Construct_UClass_AArenaAI_NoRegister()
	{
		return AArenaAI::StaticClass();
	}
	UClass* Z_Construct_UClass_AArenaAI()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AArenaCharacter();
			Z_Construct_UPackage_TheArena();
			OuterClass = AArenaAI::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900080;


			UProperty* NewProp_BotBehavior = new(OuterClass, TEXT("BotBehavior"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BotBehavior, AArenaAI), 0x0000000000000001, Z_Construct_UClass_UBehaviorTree_NoRegister());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation AI|Navigation Pawn|Character|InternalEvents"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AI/ArenaAI.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/AI/ArenaAI.h"));
			MetaData->SetValue(NewProp_BotBehavior, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(NewProp_BotBehavior, TEXT("ModuleRelativePath"), TEXT("Public/AI/ArenaAI.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AArenaAI(Z_Construct_UClass_AArenaAI, TEXT("AArenaAI"));
	UFunction* Z_Construct_UFunction_AArenaAIController_FindClosestEnemy()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("FindClosestEnemy"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/AI/ArenaAIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Finds the closest enemy and sets them as current target"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaAIController_FindClosestEnemyWithLOS()
	{
		struct ArenaAIController_eventFindClosestEnemyWithLOS_Parms
		{
			class AArenaCharacter* ExcludeEnemy;
			bool ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("FindClosestEnemyWithLOS"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535, sizeof(ArenaAIController_eventFindClosestEnemyWithLOS_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, ArenaAIController_eventFindClosestEnemyWithLOS_Parms, bool);
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, ArenaAIController_eventFindClosestEnemyWithLOS_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, ArenaAIController_eventFindClosestEnemyWithLOS_Parms), sizeof(bool), true);
			UProperty* NewProp_ExcludeEnemy = new(ReturnFunction, TEXT("ExcludeEnemy"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ExcludeEnemy, ArenaAIController_eventFindClosestEnemyWithLOS_Parms), 0x0000000000000080, Z_Construct_UClass_AArenaCharacter_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/AI/ArenaAIController.h"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/AI/ArenaAIController.h"));
			MetaData->SetValue(NewProp_ExcludeEnemy, TEXT("ModuleRelativePath"), TEXT("Public/AI/ArenaAIController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaAIController_ShootEnemy()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ShootEnemy"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behavior"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/AI/ArenaAIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("If there is line of sight to current enemy, start firing at them"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AArenaAIController_NoRegister()
	{
		return AArenaAIController::StaticClass();
	}
	UClass* Z_Construct_UClass_AArenaAIController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AAIController();
			Z_Construct_UPackage_TheArena();
			OuterClass = AArenaAIController::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900280;

			OuterClass->LinkChild(Z_Construct_UFunction_AArenaAIController_FindClosestEnemy());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaAIController_FindClosestEnemyWithLOS());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaAIController_ShootEnemy());

			UProperty* NewProp_BehaviorComp = new(OuterClass, TEXT("BehaviorComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BehaviorComp, AArenaAIController), 0x0000000004482008, Z_Construct_UClass_UBehaviorTreeComponent_NoRegister());
			UProperty* NewProp_BlackboardComp = new(OuterClass, TEXT("BlackboardComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BlackboardComp, AArenaAIController), 0x0000000004482008, Z_Construct_UClass_UBlackboardComponent_NoRegister());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaAIController_FindClosestEnemy());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaAIController_FindClosestEnemyWithLOS());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaAIController_ShootEnemy());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AI/ArenaAIController.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/AI/ArenaAIController.h"));
			MetaData->SetValue(NewProp_BehaviorComp, TEXT("ModuleRelativePath"), TEXT("Public/AI/ArenaAIController.h"));
			MetaData->SetValue(NewProp_BlackboardComp, TEXT("ModuleRelativePath"), TEXT("Public/AI/ArenaAIController.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AArenaAIController(Z_Construct_UClass_AArenaAIController, TEXT("AArenaAIController"));
	UClass* Z_Construct_UClass_AArenaGameSession_NoRegister()
	{
		return AArenaGameSession::StaticClass();
	}
	UClass* Z_Construct_UClass_AArenaGameSession()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameSession();
			Z_Construct_UPackage_TheArena();
			OuterClass = AArenaGameSession::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00800284;


			OuterClass->ClassConfigName = FName(TEXT("game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Online/ArenaGameSession.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaGameSession.h"));
			MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AArenaGameSession(Z_Construct_UClass_AArenaGameSession, TEXT("AArenaGameSession"));
	UFunction* Z_Construct_UFunction_AArenaPlayerState_InformAboutKill()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaPlayerState();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("InformAboutKill"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x01020CC0, 65535, sizeof(ArenaPlayerState_eventInformAboutKill_Parms));
			UProperty* NewProp_KilledPlayerState = new(ReturnFunction, TEXT("KilledPlayerState"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(KilledPlayerState, ArenaPlayerState_eventInformAboutKill_Parms), 0x0000000000000080, Z_Construct_UClass_AArenaPlayerState_NoRegister());
			UProperty* NewProp_KillerDamageType = new(ReturnFunction, TEXT("KillerDamageType"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(KillerDamageType, ArenaPlayerState_eventInformAboutKill_Parms), 0x0000000000000082, Z_Construct_UClass_UDamageType_NoRegister());
			UProperty* NewProp_KillerPlayerState = new(ReturnFunction, TEXT("KillerPlayerState"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(KillerPlayerState, ArenaPlayerState_eventInformAboutKill_Parms), 0x0000000000000080, Z_Construct_UClass_AArenaPlayerState_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaPlayerState.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sends kill (excluding self) to clients"));
			MetaData->SetValue(NewProp_KilledPlayerState, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaPlayerState.h"));
			MetaData->SetValue(NewProp_KillerDamageType, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaPlayerState.h"));
			MetaData->SetValue(NewProp_KillerPlayerState, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaPlayerState.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaPlayerState_OnRep_TeamColor()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaPlayerState();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("OnRep_TeamColor"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaPlayerState.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("replicate team colors. Updated the players mesh colors appropriately"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AArenaPlayerState_NoRegister()
	{
		return AArenaPlayerState::StaticClass();
	}
	UClass* Z_Construct_UClass_AArenaPlayerState()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerState();
			Z_Construct_UPackage_TheArena();
			OuterClass = AArenaPlayerState::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900280;

			OuterClass->LinkChild(Z_Construct_UFunction_AArenaPlayerState_InformAboutKill());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaPlayerState_OnRep_TeamColor());

			UProperty* NewProp_NumRocketsFired = new(OuterClass, TEXT("NumRocketsFired"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumRocketsFired, AArenaPlayerState), 0x0000080000000000);
			UProperty* NewProp_NumBulletsFired = new(OuterClass, TEXT("NumBulletsFired"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumBulletsFired, AArenaPlayerState), 0x0000080000000000);
			UProperty* NewProp_NumDeaths = new(OuterClass, TEXT("NumDeaths"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumDeaths, AArenaPlayerState), 0x0000080000002020);
			UProperty* NewProp_NumKills = new(OuterClass, TEXT("NumKills"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumKills, AArenaPlayerState), 0x0000080000002020);
			UProperty* NewProp_TeamNumber = new(OuterClass, TEXT("TeamNumber"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(TeamNumber, AArenaPlayerState), 0x0000080100002020);
			NewProp_TeamNumber->RepNotifyFunc = FName(TEXT("OnRep_TeamColor"));
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaPlayerState_InformAboutKill());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaPlayerState_OnRep_TeamColor());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Online/ArenaPlayerState.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaPlayerState.h"));
			MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
			MetaData->SetValue(NewProp_NumRocketsFired, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaPlayerState.h"));
			MetaData->SetValue(NewProp_NumRocketsFired, TEXT("ToolTip"), TEXT("number of rockets fired this match"));
			MetaData->SetValue(NewProp_NumBulletsFired, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaPlayerState.h"));
			MetaData->SetValue(NewProp_NumBulletsFired, TEXT("ToolTip"), TEXT("number of bullets fired this match"));
			MetaData->SetValue(NewProp_NumDeaths, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaPlayerState.h"));
			MetaData->SetValue(NewProp_NumDeaths, TEXT("ToolTip"), TEXT("number of deaths"));
			MetaData->SetValue(NewProp_NumKills, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaPlayerState.h"));
			MetaData->SetValue(NewProp_NumKills, TEXT("ToolTip"), TEXT("number of kills"));
			MetaData->SetValue(NewProp_TeamNumber, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaPlayerState.h"));
			MetaData->SetValue(NewProp_TeamNumber, TEXT("ToolTip"), TEXT("team number"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AArenaPlayerState(Z_Construct_UClass_AArenaPlayerState, TEXT("AArenaPlayerState"));
	UClass* Z_Construct_UClass_AArenaGameState_NoRegister()
	{
		return AArenaGameState::StaticClass();
	}
	UClass* Z_Construct_UClass_AArenaGameState()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameState();
			Z_Construct_UPackage_TheArena();
			OuterClass = AArenaGameState::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00800280;


			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bTimerPaused, AArenaGameState, bool);
			UProperty* NewProp_bTimerPaused = new(OuterClass, TEXT("bTimerPaused"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bTimerPaused, AArenaGameState), 0x0000000000002020, CPP_BOOL_PROPERTY_BITMASK(bTimerPaused, AArenaGameState), sizeof(bool), true);
			UProperty* NewProp_RemainingTime = new(OuterClass, TEXT("RemainingTime"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(RemainingTime, AArenaGameState), 0x0000000000002020);
			UProperty* NewProp_TeamScores = new(OuterClass, TEXT("TeamScores"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(TeamScores, AArenaGameState), 0x0000000000002020);
			UProperty* NewProp_TeamScores_Inner = new(NewProp_TeamScores, TEXT("TeamScores"), RF_Public|RF_Transient|RF_Native) UIntProperty(FPostConstructInitializeProperties(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_NumTeams = new(OuterClass, TEXT("NumTeams"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(NumTeams, AArenaGameState), 0x0000000000002020);
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Online/ArenaGameState.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaGameState.h"));
			MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
			MetaData->SetValue(NewProp_bTimerPaused, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaGameState.h"));
			MetaData->SetValue(NewProp_bTimerPaused, TEXT("ToolTip"), TEXT("is timer paused?"));
			MetaData->SetValue(NewProp_RemainingTime, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaGameState.h"));
			MetaData->SetValue(NewProp_RemainingTime, TEXT("ToolTip"), TEXT("time left for warmup / match"));
			MetaData->SetValue(NewProp_TeamScores, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaGameState.h"));
			MetaData->SetValue(NewProp_TeamScores, TEXT("ToolTip"), TEXT("accumulated score per team"));
			MetaData->SetValue(NewProp_NumTeams, TEXT("ModuleRelativePath"), TEXT("Public/Online/ArenaGameState.h"));
			MetaData->SetValue(NewProp_NumTeams, TEXT("ToolTip"), TEXT("number of teams in current game"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AArenaGameState(Z_Construct_UClass_AArenaGameState, TEXT("AArenaGameState"));
	UClass* Z_Construct_UClass_AArenaImpactEffect_NoRegister()
	{
		return AArenaImpactEffect::StaticClass();
	}
	UClass* Z_Construct_UClass_AArenaImpactEffect()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_TheArena();
			OuterClass = AArenaImpactEffect::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900081;


			UProperty* NewProp_SurfaceHit = new(OuterClass, TEXT("SurfaceHit"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SurfaceHit, AArenaImpactEffect), 0x0000000000000014, Z_Construct_UScriptStruct_UEngineTypes_FHitResult()); // 2510479624
			UProperty* NewProp_DefaultDecal = new(OuterClass, TEXT("DefaultDecal"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(DefaultDecal, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UScriptStruct_FDecalData()); // 4078626812
			UProperty* NewProp_EnergySound = new(OuterClass, TEXT("EnergySound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EnergySound, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_FleshSound = new(OuterClass, TEXT("FleshSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FleshSound, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_GrassSound = new(OuterClass, TEXT("GrassSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(GrassSound, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_GlassSound = new(OuterClass, TEXT("GlassSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(GlassSound, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_WoodSound = new(OuterClass, TEXT("WoodSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WoodSound, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_MetalSound = new(OuterClass, TEXT("MetalSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MetalSound, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_WaterSound = new(OuterClass, TEXT("WaterSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WaterSound, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_DirtSound = new(OuterClass, TEXT("DirtSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(DirtSound, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_ConcreteSound = new(OuterClass, TEXT("ConcreteSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ConcreteSound, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_DefaultSound = new(OuterClass, TEXT("DefaultSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(DefaultSound, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_EnergyFX = new(OuterClass, TEXT("EnergyFX"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EnergyFX, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
			UProperty* NewProp_FleshFX = new(OuterClass, TEXT("FleshFX"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FleshFX, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
			UProperty* NewProp_GrassFX = new(OuterClass, TEXT("GrassFX"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(GrassFX, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
			UProperty* NewProp_GlassFX = new(OuterClass, TEXT("GlassFX"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(GlassFX, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
			UProperty* NewProp_WoodFX = new(OuterClass, TEXT("WoodFX"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WoodFX, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
			UProperty* NewProp_MetalFX = new(OuterClass, TEXT("MetalFX"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MetalFX, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
			UProperty* NewProp_WaterFX = new(OuterClass, TEXT("WaterFX"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WaterFX, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
			UProperty* NewProp_DirtFX = new(OuterClass, TEXT("DirtFX"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(DirtFX, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
			UProperty* NewProp_ConcreteFX = new(OuterClass, TEXT("ConcreteFX"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ConcreteFX, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
			UProperty* NewProp_DefaultFX = new(OuterClass, TEXT("DefaultFX"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(DefaultFX, AArenaImpactEffect), 0x0000000000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
			UProperty* NewProp_ImpactLightFadeOut = new(OuterClass, TEXT("ImpactLightFadeOut"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ImpactLightFadeOut, AArenaImpactEffect), 0x0000000000010001);
			UProperty* NewProp_ImpactLight = new(OuterClass, TEXT("ImpactLight"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ImpactLight, AArenaImpactEffect), 0x00000000044b0009, Z_Construct_UClass_UPointLightComponent_NoRegister());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_SurfaceHit, TEXT("Category"), TEXT("Surface"));
			MetaData->SetValue(NewProp_SurfaceHit, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_SurfaceHit, TEXT("ToolTip"), TEXT("surface data for spawning"));
			MetaData->SetValue(NewProp_DefaultDecal, TEXT("Category"), TEXT("Defaults"));
			MetaData->SetValue(NewProp_DefaultDecal, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_DefaultDecal, TEXT("ToolTip"), TEXT("default decal when material specific override doesn't exist"));
			MetaData->SetValue(NewProp_EnergySound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_EnergySound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_FleshSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_FleshSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_FleshSound, TEXT("ToolTip"), TEXT("impact FX on flesh"));
			MetaData->SetValue(NewProp_GrassSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_GrassSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_GrassSound, TEXT("ToolTip"), TEXT("impact FX on grass"));
			MetaData->SetValue(NewProp_GlassSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_GlassSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_GlassSound, TEXT("ToolTip"), TEXT("impact FX on glass"));
			MetaData->SetValue(NewProp_WoodSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_WoodSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_WoodSound, TEXT("ToolTip"), TEXT("impact FX on wood"));
			MetaData->SetValue(NewProp_MetalSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_MetalSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_MetalSound, TEXT("ToolTip"), TEXT("impact FX on metal"));
			MetaData->SetValue(NewProp_WaterSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_WaterSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_WaterSound, TEXT("ToolTip"), TEXT("impact FX on water"));
			MetaData->SetValue(NewProp_DirtSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_DirtSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_DirtSound, TEXT("ToolTip"), TEXT("impact FX on dirt"));
			MetaData->SetValue(NewProp_ConcreteSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_ConcreteSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_ConcreteSound, TEXT("ToolTip"), TEXT("impact FX on concrete"));
			MetaData->SetValue(NewProp_DefaultSound, TEXT("Category"), TEXT("Defaults"));
			MetaData->SetValue(NewProp_DefaultSound, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_DefaultSound, TEXT("ToolTip"), TEXT("default impact sound used when material specific override doesn't exist"));
			MetaData->SetValue(NewProp_EnergyFX, TEXT("Category"), TEXT("Visual"));
			MetaData->SetValue(NewProp_EnergyFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_FleshFX, TEXT("Category"), TEXT("Visual"));
			MetaData->SetValue(NewProp_FleshFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_FleshFX, TEXT("ToolTip"), TEXT("impact FX on flesh"));
			MetaData->SetValue(NewProp_GrassFX, TEXT("Category"), TEXT("Visual"));
			MetaData->SetValue(NewProp_GrassFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_GrassFX, TEXT("ToolTip"), TEXT("impact FX on grass"));
			MetaData->SetValue(NewProp_GlassFX, TEXT("Category"), TEXT("Visual"));
			MetaData->SetValue(NewProp_GlassFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_GlassFX, TEXT("ToolTip"), TEXT("impact FX on glass"));
			MetaData->SetValue(NewProp_WoodFX, TEXT("Category"), TEXT("Visual"));
			MetaData->SetValue(NewProp_WoodFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_WoodFX, TEXT("ToolTip"), TEXT("impact FX on wood"));
			MetaData->SetValue(NewProp_MetalFX, TEXT("Category"), TEXT("Visual"));
			MetaData->SetValue(NewProp_MetalFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_MetalFX, TEXT("ToolTip"), TEXT("impact FX on metal"));
			MetaData->SetValue(NewProp_WaterFX, TEXT("Category"), TEXT("Visual"));
			MetaData->SetValue(NewProp_WaterFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_WaterFX, TEXT("ToolTip"), TEXT("impact FX on water"));
			MetaData->SetValue(NewProp_DirtFX, TEXT("Category"), TEXT("Visual"));
			MetaData->SetValue(NewProp_DirtFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_DirtFX, TEXT("ToolTip"), TEXT("impact FX on dirt"));
			MetaData->SetValue(NewProp_ConcreteFX, TEXT("Category"), TEXT("Visual"));
			MetaData->SetValue(NewProp_ConcreteFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_ConcreteFX, TEXT("ToolTip"), TEXT("impact FX on concrete"));
			MetaData->SetValue(NewProp_DefaultFX, TEXT("Category"), TEXT("Defaults"));
			MetaData->SetValue(NewProp_DefaultFX, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_DefaultFX, TEXT("ToolTip"), TEXT("default impact FX used when material specific override doesn't exist"));
			MetaData->SetValue(NewProp_ImpactLightFadeOut, TEXT("Category"), TEXT("Effect"));
			MetaData->SetValue(NewProp_ImpactLightFadeOut, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_ImpactLightFadeOut, TEXT("ToolTip"), TEXT("how long keep explosion light on?"));
			MetaData->SetValue(NewProp_ImpactLight, TEXT("Category"), TEXT("Effect"));
			MetaData->SetValue(NewProp_ImpactLight, TEXT("ModuleRelativePath"), TEXT("Public/Effects/ArenaImpactEffect.h"));
			MetaData->SetValue(NewProp_ImpactLight, TEXT("ToolTip"), TEXT("explosion light"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AArenaImpactEffect(Z_Construct_UClass_AArenaImpactEffect, TEXT("AArenaImpactEffect"));
	UClass* Z_Construct_UClass_UArenaLocalPlayer_NoRegister()
	{
		return UArenaLocalPlayer::StaticClass();
	}
	UClass* Z_Construct_UClass_UArenaLocalPlayer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ULocalPlayer();
			Z_Construct_UPackage_TheArena();
			OuterClass = UArenaLocalPlayer::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x0010008C;


			OuterClass->ClassConfigName = FName(TEXT("game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Player/ArenaLocalPlayer.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaLocalPlayer.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UArenaLocalPlayer(Z_Construct_UClass_UArenaLocalPlayer, TEXT("UArenaLocalPlayer"));
	UClass* Z_Construct_UClass_AArenaPlayerCameraManager_NoRegister()
	{
		return AArenaPlayerCameraManager::StaticClass();
	}
	UClass* Z_Construct_UClass_AArenaPlayerCameraManager()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerCameraManager();
			Z_Construct_UPackage_TheArena();
			OuterClass = AArenaPlayerCameraManager::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900288;


			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Player/ArenaPlayerCameraManager.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaPlayerCameraManager.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AArenaPlayerCameraManager(Z_Construct_UClass_AArenaPlayerCameraManager, TEXT("AArenaPlayerCameraManager"));
	UFunction* Z_Construct_UFunction_AArenaPlayerController_ClientEndOnlineGame()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ClientEndOnlineGame"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x01020CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Ends the online game using the session name in the PlayerState"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaPlayerController_ClientGameStarted()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ClientGameStarted"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x01020CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("notify player about started match"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaPlayerController_ClientStartOnlineGame()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ClientStartOnlineGame"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x01020CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Starts the online game using the session name in the PlayerState"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaPlayerController_ServerSuicide()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ServerSuicide"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x80280CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Notifies the server that the client has suicided"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaPlayerController_SetGodMode()
	{
		struct ArenaPlayerController_eventSetGodMode_Parms
		{
			bool bEnable;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("SetGodMode"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00020601, 65535, sizeof(ArenaPlayerController_eventSetGodMode_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnable, ArenaPlayerController_eventSetGodMode_Parms, bool);
			UProperty* NewProp_bEnable = new(ReturnFunction, TEXT("bEnable"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnable, ArenaPlayerController_eventSetGodMode_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bEnable, ArenaPlayerController_eventSetGodMode_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("set god mode cheat"));
			MetaData->SetValue(NewProp_bEnable, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaPlayerController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaPlayerController_Suicide()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaPlayerController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("Suicide"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00080600, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaPlayerController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Causes the player to commit suicide"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AArenaPlayerController_NoRegister()
	{
		return AArenaPlayerController::StaticClass();
	}
	UClass* Z_Construct_UClass_AArenaPlayerController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerController();
			Z_Construct_UPackage_TheArena();
			OuterClass = AArenaPlayerController::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900284;

			OuterClass->LinkChild(Z_Construct_UFunction_AArenaPlayerController_ClientEndOnlineGame());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaPlayerController_ClientGameStarted());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaPlayerController_ClientStartOnlineGame());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaPlayerController_ServerSuicide());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaPlayerController_SetGodMode());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaPlayerController_Suicide());

			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bGodMode, AArenaPlayerController, uint8);
			UProperty* NewProp_bGodMode = new(OuterClass, TEXT("bGodMode"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bGodMode, AArenaPlayerController), 0x0000080000002020, CPP_BOOL_PROPERTY_BITMASK(bGodMode, AArenaPlayerController), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHealthRegen, AArenaPlayerController, uint8);
			UProperty* NewProp_bHealthRegen = new(OuterClass, TEXT("bHealthRegen"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHealthRegen, AArenaPlayerController), 0x0000080000002020, CPP_BOOL_PROPERTY_BITMASK(bHealthRegen, AArenaPlayerController), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInfiniteClip, AArenaPlayerController, uint8);
			UProperty* NewProp_bInfiniteClip = new(OuterClass, TEXT("bInfiniteClip"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInfiniteClip, AArenaPlayerController), 0x0000080000002020, CPP_BOOL_PROPERTY_BITMASK(bInfiniteClip, AArenaPlayerController), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInfiniteAmmo, AArenaPlayerController, uint8);
			UProperty* NewProp_bInfiniteAmmo = new(OuterClass, TEXT("bInfiniteAmmo"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInfiniteAmmo, AArenaPlayerController), 0x0000080000002020, CPP_BOOL_PROPERTY_BITMASK(bInfiniteAmmo, AArenaPlayerController), sizeof(uint8), false);
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaPlayerController_ClientEndOnlineGame());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaPlayerController_ClientGameStarted());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaPlayerController_ClientStartOnlineGame());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaPlayerController_ServerSuicide());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaPlayerController_SetGodMode());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaPlayerController_Suicide());
			OuterClass->ClassConfigName = FName(TEXT("game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Player/ArenaPlayerController.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaPlayerController.h"));
			MetaData->SetValue(NewProp_bGodMode, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaPlayerController.h"));
			MetaData->SetValue(NewProp_bGodMode, TEXT("ToolTip"), TEXT("god mode cheat"));
			MetaData->SetValue(NewProp_bHealthRegen, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaPlayerController.h"));
			MetaData->SetValue(NewProp_bHealthRegen, TEXT("ToolTip"), TEXT("health regen cheat"));
			MetaData->SetValue(NewProp_bInfiniteClip, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaPlayerController.h"));
			MetaData->SetValue(NewProp_bInfiniteClip, TEXT("ToolTip"), TEXT("infinite clip cheat"));
			MetaData->SetValue(NewProp_bInfiniteAmmo, TEXT("ModuleRelativePath"), TEXT("Public/Player/ArenaPlayerController.h"));
			MetaData->SetValue(NewProp_bInfiniteAmmo, TEXT("ToolTip"), TEXT("infinite ammo cheat"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AArenaPlayerController(Z_Construct_UClass_AArenaPlayerController, TEXT("AArenaPlayerController"));
	UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponAnim()
	{
		UStruct* Outer=Z_Construct_UClass_AArenaRangedWeapon();
		static UScriptStruct* ReturnStruct = NULL;
		if (!ReturnStruct)
		{
			ReturnStruct = new(Outer, TEXT("WeaponAnim"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FPostConstructInitializeProperties(), NULL, new UScriptStruct::TCppStructOps<FWeaponAnim>, EStructFlags(0x00000001));
			UProperty* NewProp_Pawn3P = new(ReturnStruct, TEXT("Pawn3P"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Pawn3P, FWeaponAnim), 0x0000000000010001, Z_Construct_UClass_UAnimMontage_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_Pawn3P, TEXT("Category"), TEXT("Animation"));
			MetaData->SetValue(NewProp_Pawn3P, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_Pawn3P, TEXT("ToolTip"), TEXT("animation played on pawn (3rd person view)"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponAnim_CRC() { return 2249408027U; }
	UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponData()
	{
		UStruct* Outer=Z_Construct_UClass_AArenaRangedWeapon();
		static UScriptStruct* ReturnStruct = NULL;
		if (!ReturnStruct)
		{
			ReturnStruct = new(Outer, TEXT("WeaponData"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FPostConstructInitializeProperties(), NULL, new UScriptStruct::TCppStructOps<FWeaponData>, EStructFlags(0x00000001));
			UProperty* NewProp_NoAnimReloadDuration = new(ReturnStruct, TEXT("NoAnimReloadDuration"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(NoAnimReloadDuration, FWeaponData), 0x0000000000010001);
			UProperty* NewProp_TimeBetweenShots = new(ReturnStruct, TEXT("TimeBetweenShots"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(TimeBetweenShots, FWeaponData), 0x0000000000010001);
			UProperty* NewProp_InitialClips = new(ReturnStruct, TEXT("InitialClips"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(InitialClips, FWeaponData), 0x0000000000010001);
			UProperty* NewProp_AmmoPerClip = new(ReturnStruct, TEXT("AmmoPerClip"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(AmmoPerClip, FWeaponData), 0x0000000000010001);
			UProperty* NewProp_MaxAmmo = new(ReturnStruct, TEXT("MaxAmmo"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MaxAmmo, FWeaponData), 0x0000000000010001);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInfiniteClip, FWeaponData, bool);
			UProperty* NewProp_bInfiniteClip = new(ReturnStruct, TEXT("bInfiniteClip"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInfiniteClip, FWeaponData), 0x0000000000010001, CPP_BOOL_PROPERTY_BITMASK(bInfiniteClip, FWeaponData), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInfiniteAmmo, FWeaponData, bool);
			UProperty* NewProp_bInfiniteAmmo = new(ReturnStruct, TEXT("bInfiniteAmmo"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInfiniteAmmo, FWeaponData), 0x0000000000010001, CPP_BOOL_PROPERTY_BITMASK(bInfiniteAmmo, FWeaponData), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_NoAnimReloadDuration, TEXT("Category"), TEXT("WeaponStat"));
			MetaData->SetValue(NewProp_NoAnimReloadDuration, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_NoAnimReloadDuration, TEXT("ToolTip"), TEXT("failsafe reload duration if weapon doesn't have any animation for it"));
			MetaData->SetValue(NewProp_TimeBetweenShots, TEXT("Category"), TEXT("WeaponStat"));
			MetaData->SetValue(NewProp_TimeBetweenShots, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_TimeBetweenShots, TEXT("ToolTip"), TEXT("time between two consecutive shots"));
			MetaData->SetValue(NewProp_InitialClips, TEXT("Category"), TEXT("Ammo"));
			MetaData->SetValue(NewProp_InitialClips, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_InitialClips, TEXT("ToolTip"), TEXT("initial clips"));
			MetaData->SetValue(NewProp_AmmoPerClip, TEXT("Category"), TEXT("Ammo"));
			MetaData->SetValue(NewProp_AmmoPerClip, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_AmmoPerClip, TEXT("ToolTip"), TEXT("clip size"));
			MetaData->SetValue(NewProp_MaxAmmo, TEXT("Category"), TEXT("Ammo"));
			MetaData->SetValue(NewProp_MaxAmmo, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_MaxAmmo, TEXT("ToolTip"), TEXT("max ammo"));
			MetaData->SetValue(NewProp_bInfiniteClip, TEXT("Category"), TEXT("Ammo"));
			MetaData->SetValue(NewProp_bInfiniteClip, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_bInfiniteClip, TEXT("ToolTip"), TEXT("infinite ammo in clip, no reload required"));
			MetaData->SetValue(NewProp_bInfiniteAmmo, TEXT("Category"), TEXT("Ammo"));
			MetaData->SetValue(NewProp_bInfiniteAmmo, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_bInfiniteAmmo, TEXT("ToolTip"), TEXT("inifite ammo for reloads"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponData_CRC() { return 2456398476U; }
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_ClientStartReload()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ClientStartReload"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x01020CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("trigger reload from server"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_GetPawnOwner()
	{
		struct ArenaRangedWeapon_eventGetPawnOwner_Parms
		{
			class AArenaCharacter* ReturnValue;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("GetPawnOwner"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x54020401, 65535, sizeof(ArenaRangedWeapon_eventGetPawnOwner_Parms));
			UProperty* NewProp_ReturnValue = new(ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, ArenaRangedWeapon_eventGetPawnOwner_Parms), 0x0000000000000580, Z_Construct_UClass_AArenaCharacter_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Weapon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get pawn owner"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_OnRep_BurstCounter()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("OnRep_BurstCounter"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_OnRep_MyPawn()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("OnRep_MyPawn"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Replication & effects"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_OnRep_Reload()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("OnRep_Reload"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_ServerHandleFiring()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ServerHandleFiring"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x80280CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("[server] fire & update ammo"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_ServerStartFire()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ServerStartFire"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x80280CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Input - server side"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_ServerStartReload()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ServerStartReload"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x80280CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_ServerStopFire()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ServerStopFire"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x80280CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_ServerStopReload()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ServerStopReload"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x80280CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AArenaRangedWeapon_NoRegister()
	{
		return AArenaRangedWeapon::StaticClass();
	}
	UClass* Z_Construct_UClass_AArenaRangedWeapon()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_TheArena();
			OuterClass = AArenaRangedWeapon::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900081;

			OuterClass->LinkChild(Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponAnim()); // 2249408027
			OuterClass->LinkChild(Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponData()); // 2456398476
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_ClientStartReload());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_GetPawnOwner());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_OnRep_BurstCounter());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_OnRep_MyPawn());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_OnRep_Reload());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_ServerHandleFiring());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_ServerStartFire());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_ServerStartReload());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_ServerStopFire());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_ServerStopReload());

			UProperty* NewProp_BurstCounter = new(OuterClass, TEXT("BurstCounter"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(BurstCounter, AArenaRangedWeapon), 0x0000080100002020);
			NewProp_BurstCounter->RepNotifyFunc = FName(TEXT("OnRep_BurstCounter"));
			UProperty* NewProp_CurrentAmmoInClip = new(OuterClass, TEXT("CurrentAmmoInClip"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(CurrentAmmoInClip, AArenaRangedWeapon), 0x0000080000002020);
			UProperty* NewProp_CurrentAmmo = new(OuterClass, TEXT("CurrentAmmo"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(CurrentAmmo, AArenaRangedWeapon), 0x0000080000002020);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPendingReload, AArenaRangedWeapon, uint8);
			UProperty* NewProp_bPendingReload = new(OuterClass, TEXT("bPendingReload"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPendingReload, AArenaRangedWeapon), 0x0000080100002020, CPP_BOOL_PROPERTY_BITMASK(bPendingReload, AArenaRangedWeapon), sizeof(uint8), false);
			NewProp_bPendingReload->RepNotifyFunc = FName(TEXT("OnRep_Reload"));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLoopedFireAnim, AArenaRangedWeapon, uint8);
			UProperty* NewProp_bLoopedFireAnim = new(OuterClass, TEXT("bLoopedFireAnim"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLoopedFireAnim, AArenaRangedWeapon), 0x0000080000010001, CPP_BOOL_PROPERTY_BITMASK(bLoopedFireAnim, AArenaRangedWeapon), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLoopedFireSound, AArenaRangedWeapon, uint8);
			UProperty* NewProp_bLoopedFireSound = new(OuterClass, TEXT("bLoopedFireSound"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLoopedFireSound, AArenaRangedWeapon), 0x0000080000010001, CPP_BOOL_PROPERTY_BITMASK(bLoopedFireSound, AArenaRangedWeapon), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLoopedMuzzleFX, AArenaRangedWeapon, uint8);
			UProperty* NewProp_bLoopedMuzzleFX = new(OuterClass, TEXT("bLoopedMuzzleFX"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLoopedMuzzleFX, AArenaRangedWeapon), 0x0000080000010001, CPP_BOOL_PROPERTY_BITMASK(bLoopedMuzzleFX, AArenaRangedWeapon), sizeof(uint8), false);
			UProperty* NewProp_FireAnim = new(OuterClass, TEXT("FireAnim"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(FireAnim, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponAnim()); // 2249408027
			UProperty* NewProp_EquipAnim = new(OuterClass, TEXT("EquipAnim"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(EquipAnim, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponAnim()); // 2249408027
			UProperty* NewProp_EquipSound = new(OuterClass, TEXT("EquipSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(EquipSound, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_MeleeAnim = new(OuterClass, TEXT("MeleeAnim"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(MeleeAnim, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponAnim()); // 2249408027
			UProperty* NewProp_ReloadAnim = new(OuterClass, TEXT("ReloadAnim"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReloadAnim, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponAnim()); // 2249408027
			UProperty* NewProp_MeleeSound = new(OuterClass, TEXT("MeleeSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MeleeSound, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_ReloadSound = new(OuterClass, TEXT("ReloadSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ReloadSound, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_OutOfAmmoSound = new(OuterClass, TEXT("OutOfAmmoSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OutOfAmmoSound, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_FireFinishSound = new(OuterClass, TEXT("FireFinishSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FireFinishSound, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_FireLoopSound = new(OuterClass, TEXT("FireLoopSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FireLoopSound, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_FireSound = new(OuterClass, TEXT("FireSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FireSound, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UClass_USoundCue_NoRegister());
			UProperty* NewProp_FireForceFeedback = new(OuterClass, TEXT("FireForceFeedback"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FireForceFeedback, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UClass_UForceFeedbackEffect_NoRegister());
			UProperty* NewProp_FireCameraShake = new(OuterClass, TEXT("FireCameraShake"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(FireCameraShake, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UClass_UCameraShake_NoRegister());
			UProperty* NewProp_MuzzlePSC = new(OuterClass, TEXT("MuzzlePSC"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MuzzlePSC, AArenaRangedWeapon), 0x0000080004082008, Z_Construct_UClass_UParticleSystemComponent_NoRegister());
			UProperty* NewProp_MuzzleFX = new(OuterClass, TEXT("MuzzleFX"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MuzzleFX, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
			UProperty* NewProp_MuzzleAttachPoint = new(OuterClass, TEXT("MuzzleAttachPoint"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(MuzzleAttachPoint, AArenaRangedWeapon), 0x0000080000010001);
			UProperty* NewProp_FireAC = new(OuterClass, TEXT("FireAC"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FireAC, AArenaRangedWeapon), 0x0000080004082008, Z_Construct_UClass_UAudioComponent_NoRegister());
			UProperty* NewProp_Mesh3P = new(OuterClass, TEXT("Mesh3P"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Mesh3P, AArenaRangedWeapon), 0x00000800044b0009, Z_Construct_UClass_USkeletalMeshComponent_NoRegister());
			UProperty* NewProp_WeaponConfig = new(OuterClass, TEXT("WeaponConfig"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(WeaponConfig, AArenaRangedWeapon), 0x0000080000010001, Z_Construct_UScriptStruct_AArenaRangedWeapon_FWeaponData()); // 2456398476
			UProperty* NewProp_MyPawn = new(OuterClass, TEXT("MyPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MyPawn, AArenaRangedWeapon), 0x0000080100002020, Z_Construct_UClass_AArenaCharacter_NoRegister());
			NewProp_MyPawn->RepNotifyFunc = FName(TEXT("OnRep_MyPawn"));
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_ClientStartReload());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_GetPawnOwner());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_OnRep_BurstCounter());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_OnRep_MyPawn());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_OnRep_Reload());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_ServerHandleFiring());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_ServerStartFire());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_ServerStartReload());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_ServerStopFire());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_ServerStopReload());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_BurstCounter, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_BurstCounter, TEXT("ToolTip"), TEXT("burst counter, used for replicating fire events to remote clients"));
			MetaData->SetValue(NewProp_CurrentAmmoInClip, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_CurrentAmmoInClip, TEXT("ToolTip"), TEXT("current ammo - inside clip"));
			MetaData->SetValue(NewProp_CurrentAmmo, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_CurrentAmmo, TEXT("ToolTip"), TEXT("current total ammo"));
			MetaData->SetValue(NewProp_bPendingReload, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_bPendingReload, TEXT("ToolTip"), TEXT("is reload animation playing?"));
			MetaData->SetValue(NewProp_bLoopedFireAnim, TEXT("Category"), TEXT("Animation"));
			MetaData->SetValue(NewProp_bLoopedFireAnim, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_bLoopedFireAnim, TEXT("ToolTip"), TEXT("is fire animation looped?"));
			MetaData->SetValue(NewProp_bLoopedFireSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_bLoopedFireSound, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_bLoopedFireSound, TEXT("ToolTip"), TEXT("is fire sound looped?"));
			MetaData->SetValue(NewProp_bLoopedMuzzleFX, TEXT("Category"), TEXT("Effects"));
			MetaData->SetValue(NewProp_bLoopedMuzzleFX, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_bLoopedMuzzleFX, TEXT("ToolTip"), TEXT("is muzzle FX looped?"));
			MetaData->SetValue(NewProp_FireAnim, TEXT("Category"), TEXT("Animation"));
			MetaData->SetValue(NewProp_FireAnim, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_FireAnim, TEXT("ToolTip"), TEXT("fire animations"));
			MetaData->SetValue(NewProp_EquipAnim, TEXT("Category"), TEXT("Animation"));
			MetaData->SetValue(NewProp_EquipAnim, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_EquipAnim, TEXT("ToolTip"), TEXT("equip animations"));
			MetaData->SetValue(NewProp_EquipSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_EquipSound, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_EquipSound, TEXT("ToolTip"), TEXT("equip sound"));
			MetaData->SetValue(NewProp_MeleeAnim, TEXT("Category"), TEXT("Animation"));
			MetaData->SetValue(NewProp_MeleeAnim, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_MeleeAnim, TEXT("ToolTip"), TEXT("melee animations"));
			MetaData->SetValue(NewProp_ReloadAnim, TEXT("Category"), TEXT("Animation"));
			MetaData->SetValue(NewProp_ReloadAnim, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_ReloadAnim, TEXT("ToolTip"), TEXT("reload animations"));
			MetaData->SetValue(NewProp_MeleeSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_MeleeSound, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_MeleeSound, TEXT("ToolTip"), TEXT("reload sound"));
			MetaData->SetValue(NewProp_ReloadSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_ReloadSound, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_ReloadSound, TEXT("ToolTip"), TEXT("reload sound"));
			MetaData->SetValue(NewProp_OutOfAmmoSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_OutOfAmmoSound, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_OutOfAmmoSound, TEXT("ToolTip"), TEXT("out of ammo sound"));
			MetaData->SetValue(NewProp_FireFinishSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_FireFinishSound, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_FireFinishSound, TEXT("ToolTip"), TEXT("finished burst sound (bLoopedFireSound set)"));
			MetaData->SetValue(NewProp_FireLoopSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_FireLoopSound, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_FireLoopSound, TEXT("ToolTip"), TEXT("looped fire sound (bLoopedFireSound set)"));
			MetaData->SetValue(NewProp_FireSound, TEXT("Category"), TEXT("Sound"));
			MetaData->SetValue(NewProp_FireSound, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_FireSound, TEXT("ToolTip"), TEXT("single fire sound (bLoopedFireSound not set)"));
			MetaData->SetValue(NewProp_FireForceFeedback, TEXT("Category"), TEXT("Effects"));
			MetaData->SetValue(NewProp_FireForceFeedback, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_FireForceFeedback, TEXT("ToolTip"), TEXT("force feedback effect to play when the weapon is fired"));
			MetaData->SetValue(NewProp_FireCameraShake, TEXT("Category"), TEXT("Effects"));
			MetaData->SetValue(NewProp_FireCameraShake, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_FireCameraShake, TEXT("ToolTip"), TEXT("camera shake on firing"));
			MetaData->SetValue(NewProp_MuzzlePSC, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_MuzzlePSC, TEXT("ToolTip"), TEXT("spawned component for muzzle FX"));
			MetaData->SetValue(NewProp_MuzzleFX, TEXT("Category"), TEXT("Effects"));
			MetaData->SetValue(NewProp_MuzzleFX, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_MuzzleFX, TEXT("ToolTip"), TEXT("FX for muzzle flash"));
			MetaData->SetValue(NewProp_MuzzleAttachPoint, TEXT("Category"), TEXT("Effects"));
			MetaData->SetValue(NewProp_MuzzleAttachPoint, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_MuzzleAttachPoint, TEXT("ToolTip"), TEXT("name of bone/socket for muzzle in weapon mesh"));
			MetaData->SetValue(NewProp_FireAC, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_FireAC, TEXT("ToolTip"), TEXT("firing audio (bLoopedFireSound set)"));
			MetaData->SetValue(NewProp_Mesh3P, TEXT("Category"), TEXT("Mesh"));
			MetaData->SetValue(NewProp_Mesh3P, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_Mesh3P, TEXT("ToolTip"), TEXT("weapon mesh: 3rd person view"));
			MetaData->SetValue(NewProp_WeaponConfig, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(NewProp_WeaponConfig, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_WeaponConfig, TEXT("ToolTip"), TEXT("weapon data"));
			MetaData->SetValue(NewProp_MyPawn, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon.h"));
			MetaData->SetValue(NewProp_MyPawn, TEXT("ToolTip"), TEXT("pawn owner"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AArenaRangedWeapon(Z_Construct_UClass_AArenaRangedWeapon, TEXT("AArenaRangedWeapon"));
	UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_Projectile_FProjectileWeaponData()
	{
		UStruct* Outer=Z_Construct_UClass_AArenaRangedWeapon_Projectile();
		static UScriptStruct* ReturnStruct = NULL;
		if (!ReturnStruct)
		{
			ReturnStruct = new(Outer, TEXT("ProjectileWeaponData"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FPostConstructInitializeProperties(), NULL, new UScriptStruct::TCppStructOps<FProjectileWeaponData>, EStructFlags(0x00000001));
			UProperty* NewProp_DamageType = new(ReturnStruct, TEXT("DamageType"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(DamageType, FProjectileWeaponData), 0x0000000000010001, Z_Construct_UClass_UDamageType_NoRegister());
			UProperty* NewProp_ExplosionRadius = new(ReturnStruct, TEXT("ExplosionRadius"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ExplosionRadius, FProjectileWeaponData), 0x0000000000010001);
			UProperty* NewProp_HitDamage = new(ReturnStruct, TEXT("HitDamage"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(HitDamage, FProjectileWeaponData), 0x0000000000010001);
			UProperty* NewProp_ProjectileLife = new(ReturnStruct, TEXT("ProjectileLife"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ProjectileLife, FProjectileWeaponData), 0x0000000000010001);
			UProperty* NewProp_FiringSpreadMax = new(ReturnStruct, TEXT("FiringSpreadMax"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FiringSpreadMax, FProjectileWeaponData), 0x0000000000010001);
			UProperty* NewProp_FiringSpreadIncrement = new(ReturnStruct, TEXT("FiringSpreadIncrement"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FiringSpreadIncrement, FProjectileWeaponData), 0x0000000000010001);
			UProperty* NewProp_TargetingSpreadMod = new(ReturnStruct, TEXT("TargetingSpreadMod"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(TargetingSpreadMod, FProjectileWeaponData), 0x0000000000010001);
			UProperty* NewProp_WeaponSpread = new(ReturnStruct, TEXT("WeaponSpread"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(WeaponSpread, FProjectileWeaponData), 0x0000000000010001);
			UProperty* NewProp_ProjectileClass = new(ReturnStruct, TEXT("ProjectileClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ProjectileClass, FProjectileWeaponData), 0x0000000000010001, Z_Construct_UClass_AArenaProjectile_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(NewProp_DamageType, TEXT("Category"), TEXT("WeaponStat"));
			MetaData->SetValue(NewProp_DamageType, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(NewProp_DamageType, TEXT("ToolTip"), TEXT("type of damage"));
			MetaData->SetValue(NewProp_ExplosionRadius, TEXT("Category"), TEXT("WeaponStat"));
			MetaData->SetValue(NewProp_ExplosionRadius, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(NewProp_ExplosionRadius, TEXT("ToolTip"), TEXT("radius of damage"));
			MetaData->SetValue(NewProp_HitDamage, TEXT("Category"), TEXT("WeaponStat"));
			MetaData->SetValue(NewProp_HitDamage, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(NewProp_HitDamage, TEXT("ToolTip"), TEXT("damage amount"));
			MetaData->SetValue(NewProp_ProjectileLife, TEXT("Category"), TEXT("Projectile"));
			MetaData->SetValue(NewProp_ProjectileLife, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(NewProp_ProjectileLife, TEXT("ToolTip"), TEXT("life time"));
			MetaData->SetValue(NewProp_FiringSpreadMax, TEXT("Category"), TEXT("Accuracy"));
			MetaData->SetValue(NewProp_FiringSpreadMax, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(NewProp_FiringSpreadMax, TEXT("ToolTip"), TEXT("continuous firing: max increment"));
			MetaData->SetValue(NewProp_FiringSpreadIncrement, TEXT("Category"), TEXT("Accuracy"));
			MetaData->SetValue(NewProp_FiringSpreadIncrement, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(NewProp_FiringSpreadIncrement, TEXT("ToolTip"), TEXT("continuous firing: spread increment"));
			MetaData->SetValue(NewProp_TargetingSpreadMod, TEXT("Category"), TEXT("Accuracy"));
			MetaData->SetValue(NewProp_TargetingSpreadMod, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(NewProp_TargetingSpreadMod, TEXT("ToolTip"), TEXT("targeting spread modifier"));
			MetaData->SetValue(NewProp_WeaponSpread, TEXT("Category"), TEXT("Accuracy"));
			MetaData->SetValue(NewProp_WeaponSpread, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(NewProp_WeaponSpread, TEXT("ToolTip"), TEXT("base weapon spread (degrees)"));
			MetaData->SetValue(NewProp_ProjectileClass, TEXT("Category"), TEXT("Projectile"));
			MetaData->SetValue(NewProp_ProjectileClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(NewProp_ProjectileClass, TEXT("ToolTip"), TEXT("projectile class"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_Projectile_FProjectileWeaponData_CRC() { return 751338342U; }
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_Projectile_ServerFireProjectile()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon_Projectile();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ServerFireProjectile"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x80A80CC0, 65535, sizeof(ArenaRangedWeapon_Projectile_eventServerFireProjectile_Parms));
			UProperty* NewProp_ShootDir = new(ReturnFunction, TEXT("ShootDir"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ShootDir, ArenaRangedWeapon_Projectile_eventServerFireProjectile_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector_NetQuantizeNormal()); // 2350424088
			UProperty* NewProp_Origin = new(ReturnFunction, TEXT("Origin"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Origin, ArenaRangedWeapon_Projectile_eventServerFireProjectile_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_UObject_FVector()); // 2500075670
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("spawn projectile on server"));
			MetaData->SetValue(NewProp_ShootDir, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(NewProp_Origin, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AArenaRangedWeapon_Projectile_NoRegister()
	{
		return AArenaRangedWeapon_Projectile::StaticClass();
	}
	UClass* Z_Construct_UClass_AArenaRangedWeapon_Projectile()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AArenaRangedWeapon();
			Z_Construct_UPackage_TheArena();
			OuterClass = AArenaRangedWeapon_Projectile::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900080;

			OuterClass->LinkChild(Z_Construct_UScriptStruct_AArenaRangedWeapon_Projectile_FProjectileWeaponData()); // 751338342
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_Projectile_ServerFireProjectile());

			UProperty* NewProp_ProjectileConfig = new(OuterClass, TEXT("ProjectileConfig"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ProjectileConfig, AArenaRangedWeapon_Projectile), 0x0000080000010001, Z_Construct_UScriptStruct_AArenaRangedWeapon_Projectile_FProjectileWeaponData()); // 751338342
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_Projectile_ServerFireProjectile());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(NewProp_ProjectileConfig, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(NewProp_ProjectileConfig, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Projectile.h"));
			MetaData->SetValue(NewProp_ProjectileConfig, TEXT("ToolTip"), TEXT("weapon config"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AArenaRangedWeapon_Projectile(Z_Construct_UClass_AArenaRangedWeapon_Projectile, TEXT("AArenaRangedWeapon_Projectile"));
	UFunction* Z_Construct_UFunction_AArenaProjectile_OnImpact()
	{
		struct ArenaProjectile_eventOnImpact_Parms
		{
			struct FHitResult HitResult;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaProjectile();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("OnImpact"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00420401, 65535, sizeof(ArenaProjectile_eventOnImpact_Parms));
			UProperty* NewProp_HitResult = new(ReturnFunction, TEXT("HitResult"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(HitResult, ArenaProjectile_eventOnImpact_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_UEngineTypes_FHitResult()); // 2510479624
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaProjectile.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("handle hit"));
			MetaData->SetValue(NewProp_HitResult, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaProjectile.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaProjectile_OnRep_Exploded()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaProjectile();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("OnRep_Exploded"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaProjectile.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("[client] explosion happened"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaProjectile_SetPawnOwner()
	{
		struct ArenaProjectile_eventSetPawnOwner_Parms
		{
			class AArenaCharacter* MyPawn;
		};
		UClass* OuterClass=Z_Construct_UClass_AArenaProjectile();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("SetPawnOwner"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535, sizeof(ArenaProjectile_eventSetPawnOwner_Parms));
			UProperty* NewProp_MyPawn = new(ReturnFunction, TEXT("MyPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MyPawn, ArenaProjectile_eventSetPawnOwner_Parms), 0x0000000000000080, Z_Construct_UClass_AArenaCharacter_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Weapon"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaProjectile.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get pawn owner"));
			MetaData->SetValue(NewProp_MyPawn, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaProjectile.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AArenaProjectile_NoRegister()
	{
		return AArenaProjectile::StaticClass();
	}
	UClass* Z_Construct_UClass_AArenaProjectile()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_TheArena();
			OuterClass = AArenaProjectile::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900081;

			OuterClass->LinkChild(Z_Construct_UFunction_AArenaProjectile_OnImpact());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaProjectile_OnRep_Exploded());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaProjectile_SetPawnOwner());

			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bExploded, AArenaProjectile, bool);
			UProperty* NewProp_bExploded = new(OuterClass, TEXT("bExploded"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bExploded, AArenaProjectile), 0x0000080100002020, CPP_BOOL_PROPERTY_BITMASK(bExploded, AArenaProjectile), sizeof(bool), true);
			NewProp_bExploded->RepNotifyFunc = FName(TEXT("OnRep_Exploded"));
			UProperty* NewProp_ImpactTemplate = new(OuterClass, TEXT("ImpactTemplate"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ImpactTemplate, AArenaProjectile), 0x0000080000010001, Z_Construct_UClass_AArenaImpactEffect_NoRegister());
			UProperty* NewProp_ParticleComp = new(OuterClass, TEXT("ParticleComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ParticleComp, AArenaProjectile), 0x00000800044b0009, Z_Construct_UClass_UParticleSystemComponent_NoRegister());
			UProperty* NewProp_CollisionComp = new(OuterClass, TEXT("CollisionComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CollisionComp, AArenaProjectile), 0x00000800044b0009, Z_Construct_UClass_USphereComponent_NoRegister());
			UProperty* NewProp_MovementComp = new(OuterClass, TEXT("MovementComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MovementComp, AArenaProjectile), 0x00000800044b0009, Z_Construct_UClass_UProjectileMovementComponent_NoRegister());
			UProperty* NewProp_MyPawn = new(OuterClass, TEXT("MyPawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MyPawn, AArenaProjectile), 0x0000080000002000, Z_Construct_UClass_AArenaCharacter_NoRegister());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaProjectile_OnImpact());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaProjectile_OnRep_Exploded());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaProjectile_SetPawnOwner());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/ArenaProjectile.h"));
			MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaProjectile.h"));
			MetaData->SetValue(NewProp_bExploded, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaProjectile.h"));
			MetaData->SetValue(NewProp_bExploded, TEXT("ToolTip"), TEXT("did it explode?"));
			MetaData->SetValue(NewProp_ImpactTemplate, TEXT("Category"), TEXT("Effects"));
			MetaData->SetValue(NewProp_ImpactTemplate, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaProjectile.h"));
			MetaData->SetValue(NewProp_ImpactTemplate, TEXT("ToolTip"), TEXT("effects for impact"));
			MetaData->SetValue(NewProp_ParticleComp, TEXT("Category"), TEXT("Projectile"));
			MetaData->SetValue(NewProp_ParticleComp, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaProjectile.h"));
			MetaData->SetValue(NewProp_CollisionComp, TEXT("Category"), TEXT("Projectile"));
			MetaData->SetValue(NewProp_CollisionComp, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaProjectile.h"));
			MetaData->SetValue(NewProp_CollisionComp, TEXT("ToolTip"), TEXT("collisions"));
			MetaData->SetValue(NewProp_MovementComp, TEXT("Category"), TEXT("Projectile"));
			MetaData->SetValue(NewProp_MovementComp, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaProjectile.h"));
			MetaData->SetValue(NewProp_MovementComp, TEXT("ToolTip"), TEXT("movement component"));
			MetaData->SetValue(NewProp_MyPawn, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaProjectile.h"));
			MetaData->SetValue(NewProp_MyPawn, TEXT("ToolTip"), TEXT("pawn owner"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AArenaProjectile(Z_Construct_UClass_AArenaProjectile, TEXT("AArenaProjectile"));
	UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantWeaponData()
	{
		UStruct* Outer=Z_Construct_UClass_AArenaRangedWeapon_Instant();
		static UScriptStruct* ReturnStruct = NULL;
		if (!ReturnStruct)
		{
			ReturnStruct = new(Outer, TEXT("InstantWeaponData"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FPostConstructInitializeProperties(), NULL, new UScriptStruct::TCppStructOps<FInstantWeaponData>, EStructFlags(0x00000001));
			UProperty* NewProp_AllowedViewDotHitDir = new(ReturnStruct, TEXT("AllowedViewDotHitDir"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(AllowedViewDotHitDir, FInstantWeaponData), 0x0000000000010001);
			UProperty* NewProp_ClientSideHitLeeway = new(ReturnStruct, TEXT("ClientSideHitLeeway"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ClientSideHitLeeway, FInstantWeaponData), 0x0000000000010001);
			UProperty* NewProp_DamageType = new(ReturnStruct, TEXT("DamageType"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(DamageType, FInstantWeaponData), 0x0000000000010001, Z_Construct_UClass_UDamageType_NoRegister());
			UProperty* NewProp_HitDamage = new(ReturnStruct, TEXT("HitDamage"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(HitDamage, FInstantWeaponData), 0x0000000000010001);
			UProperty* NewProp_WeaponRange = new(ReturnStruct, TEXT("WeaponRange"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(WeaponRange, FInstantWeaponData), 0x0000000000010001);
			UProperty* NewProp_FiringSpreadMax = new(ReturnStruct, TEXT("FiringSpreadMax"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FiringSpreadMax, FInstantWeaponData), 0x0000000000010001);
			UProperty* NewProp_FiringSpreadIncrement = new(ReturnStruct, TEXT("FiringSpreadIncrement"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(FiringSpreadIncrement, FInstantWeaponData), 0x0000000000010001);
			UProperty* NewProp_TargetingSpreadMod = new(ReturnStruct, TEXT("TargetingSpreadMod"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(TargetingSpreadMod, FInstantWeaponData), 0x0000000000010001);
			UProperty* NewProp_WeaponSpread = new(ReturnStruct, TEXT("WeaponSpread"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(WeaponSpread, FInstantWeaponData), 0x0000000000010001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_AllowedViewDotHitDir, TEXT("Category"), TEXT("HitVerification"));
			MetaData->SetValue(NewProp_AllowedViewDotHitDir, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_AllowedViewDotHitDir, TEXT("ToolTip"), TEXT("hit verification: threshold for dot product between view direction and hit direction"));
			MetaData->SetValue(NewProp_ClientSideHitLeeway, TEXT("Category"), TEXT("HitVerification"));
			MetaData->SetValue(NewProp_ClientSideHitLeeway, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_ClientSideHitLeeway, TEXT("ToolTip"), TEXT("hit verification: scale for bounding box of hit actor"));
			MetaData->SetValue(NewProp_DamageType, TEXT("Category"), TEXT("WeaponStat"));
			MetaData->SetValue(NewProp_DamageType, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_DamageType, TEXT("ToolTip"), TEXT("type of damage"));
			MetaData->SetValue(NewProp_HitDamage, TEXT("Category"), TEXT("WeaponStat"));
			MetaData->SetValue(NewProp_HitDamage, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_HitDamage, TEXT("ToolTip"), TEXT("damage amount"));
			MetaData->SetValue(NewProp_WeaponRange, TEXT("Category"), TEXT("WeaponStat"));
			MetaData->SetValue(NewProp_WeaponRange, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_WeaponRange, TEXT("ToolTip"), TEXT("weapon range"));
			MetaData->SetValue(NewProp_FiringSpreadMax, TEXT("Category"), TEXT("Accuracy"));
			MetaData->SetValue(NewProp_FiringSpreadMax, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_FiringSpreadMax, TEXT("ToolTip"), TEXT("continuous firing: max increment"));
			MetaData->SetValue(NewProp_FiringSpreadIncrement, TEXT("Category"), TEXT("Accuracy"));
			MetaData->SetValue(NewProp_FiringSpreadIncrement, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_FiringSpreadIncrement, TEXT("ToolTip"), TEXT("continuous firing: spread increment"));
			MetaData->SetValue(NewProp_TargetingSpreadMod, TEXT("Category"), TEXT("Accuracy"));
			MetaData->SetValue(NewProp_TargetingSpreadMod, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_TargetingSpreadMod, TEXT("ToolTip"), TEXT("targeting spread modifier"));
			MetaData->SetValue(NewProp_WeaponSpread, TEXT("Category"), TEXT("Accuracy"));
			MetaData->SetValue(NewProp_WeaponSpread, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_WeaponSpread, TEXT("ToolTip"), TEXT("base weapon spread (degrees)"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantWeaponData_CRC() { return 2275531573U; }
	UScriptStruct* Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantHitInfo()
	{
		UStruct* Outer=Z_Construct_UClass_AArenaRangedWeapon_Instant();
		static UScriptStruct* ReturnStruct = NULL;
		if (!ReturnStruct)
		{
			ReturnStruct = new(Outer, TEXT("InstantHitInfo"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FPostConstructInitializeProperties(), NULL, new UScriptStruct::TCppStructOps<FInstantHitInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_RandomSeed = new(ReturnStruct, TEXT("RandomSeed"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(RandomSeed, FInstantHitInfo), 0x0000000000000000);
			UProperty* NewProp_ReticleSpread = new(ReturnStruct, TEXT("ReticleSpread"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReticleSpread, FInstantHitInfo), 0x0000000000000000);
			UProperty* NewProp_Origin = new(ReturnStruct, TEXT("Origin"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Origin, FInstantHitInfo), 0x0000000000000000, Z_Construct_UScriptStruct_UObject_FVector()); // 2500075670
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_RandomSeed, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_ReticleSpread, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_Origin, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantHitInfo_CRC() { return 2458051855U; }
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_Instant_OnRep_HitNotify()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon_Instant();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("OnRep_HitNotify"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Effects replication"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_Instant_ServerNotifyHit()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon_Instant();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ServerNotifyHit"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x80280CC0, 65535, sizeof(ArenaRangedWeapon_Instant_eventServerNotifyHit_Parms));
			UProperty* NewProp_ReticleSpread = new(ReturnFunction, TEXT("ReticleSpread"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReticleSpread, ArenaRangedWeapon_Instant_eventServerNotifyHit_Parms), 0x0000000000000080);
			UProperty* NewProp_RandomSeed = new(ReturnFunction, TEXT("RandomSeed"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(RandomSeed, ArenaRangedWeapon_Instant_eventServerNotifyHit_Parms), 0x0000000000000080);
			UProperty* NewProp_ShootDir = new(ReturnFunction, TEXT("ShootDir"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ShootDir, ArenaRangedWeapon_Instant_eventServerNotifyHit_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector_NetQuantizeNormal()); // 2350424088
			UProperty* NewProp_Impact = new(ReturnFunction, TEXT("Impact"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Impact, ArenaRangedWeapon_Instant_eventServerNotifyHit_Parms), 0x0000000000000082, Z_Construct_UScriptStruct_UEngineTypes_FHitResult()); // 2510479624
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("server notified of hit from client to verify"));
			MetaData->SetValue(NewProp_ReticleSpread, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_RandomSeed, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_ShootDir, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_Impact, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AArenaRangedWeapon_Instant_ServerNotifyMiss()
	{
		UClass* OuterClass=Z_Construct_UClass_AArenaRangedWeapon_Instant();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("ServerNotifyMiss"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x80280C40, 65535, sizeof(ArenaRangedWeapon_Instant_eventServerNotifyMiss_Parms));
			UProperty* NewProp_ReticleSpread = new(ReturnFunction, TEXT("ReticleSpread"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReticleSpread, ArenaRangedWeapon_Instant_eventServerNotifyMiss_Parms), 0x0000000000000080);
			UProperty* NewProp_RandomSeed = new(ReturnFunction, TEXT("RandomSeed"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(RandomSeed, ArenaRangedWeapon_Instant_eventServerNotifyMiss_Parms), 0x0000000000000080);
			UProperty* NewProp_ShootDir = new(ReturnFunction, TEXT("ShootDir"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ShootDir, ArenaRangedWeapon_Instant_eventServerNotifyMiss_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector_NetQuantizeNormal()); // 2350424088
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("server notified of miss to show trail FX"));
			MetaData->SetValue(NewProp_ReticleSpread, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_RandomSeed, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_ShootDir, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AArenaRangedWeapon_Instant_NoRegister()
	{
		return AArenaRangedWeapon_Instant::StaticClass();
	}
	UClass* Z_Construct_UClass_AArenaRangedWeapon_Instant()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AArenaRangedWeapon();
			Z_Construct_UPackage_TheArena();
			OuterClass = AArenaRangedWeapon_Instant::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00900081;

			OuterClass->LinkChild(Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantWeaponData()); // 2275531573
			OuterClass->LinkChild(Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantHitInfo()); // 2458051855
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_Instant_OnRep_HitNotify());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_Instant_ServerNotifyHit());
			OuterClass->LinkChild(Z_Construct_UFunction_AArenaRangedWeapon_Instant_ServerNotifyMiss());

			UProperty* NewProp_HitNotify = new(OuterClass, TEXT("HitNotify"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(HitNotify, AArenaRangedWeapon_Instant), 0x0000080100002020, Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantHitInfo()); // 2458051855
			NewProp_HitNotify->RepNotifyFunc = FName(TEXT("OnRep_HitNotify"));
			UProperty* NewProp_TrailTargetParam = new(OuterClass, TEXT("TrailTargetParam"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(TrailTargetParam, AArenaRangedWeapon_Instant), 0x0000080000010001);
			UProperty* NewProp_TrailFX = new(OuterClass, TEXT("TrailFX"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TrailFX, AArenaRangedWeapon_Instant), 0x0000080000010001, Z_Construct_UClass_UParticleSystem_NoRegister());
			UProperty* NewProp_ImpactTemplate = new(OuterClass, TEXT("ImpactTemplate"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ImpactTemplate, AArenaRangedWeapon_Instant), 0x0000080000010001, Z_Construct_UClass_AArenaImpactEffect_NoRegister());
			UProperty* NewProp_InstantConfig = new(OuterClass, TEXT("InstantConfig"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(InstantConfig, AArenaRangedWeapon_Instant), 0x0000080000010001, Z_Construct_UScriptStruct_AArenaRangedWeapon_Instant_FInstantWeaponData()); // 2275531573
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_Instant_OnRep_HitNotify());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_Instant_ServerNotifyHit());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AArenaRangedWeapon_Instant_ServerNotifyMiss());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_HitNotify, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_HitNotify, TEXT("ToolTip"), TEXT("instant hit notify for replication"));
			MetaData->SetValue(NewProp_TrailTargetParam, TEXT("Category"), TEXT("Effects"));
			MetaData->SetValue(NewProp_TrailTargetParam, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_TrailTargetParam, TEXT("ToolTip"), TEXT("param name for beam target in smoke trail"));
			MetaData->SetValue(NewProp_TrailFX, TEXT("Category"), TEXT("Effects"));
			MetaData->SetValue(NewProp_TrailFX, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_TrailFX, TEXT("ToolTip"), TEXT("smoke trail"));
			MetaData->SetValue(NewProp_ImpactTemplate, TEXT("Category"), TEXT("Effects"));
			MetaData->SetValue(NewProp_ImpactTemplate, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_ImpactTemplate, TEXT("ToolTip"), TEXT("impact effects"));
			MetaData->SetValue(NewProp_InstantConfig, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(NewProp_InstantConfig, TEXT("ModuleRelativePath"), TEXT("Public/Weapons/ArenaRangedWeapon_Instant.h"));
			MetaData->SetValue(NewProp_InstantConfig, TEXT("ToolTip"), TEXT("weapon config"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AArenaRangedWeapon_Instant(Z_Construct_UClass_AArenaRangedWeapon_Instant, TEXT("AArenaRangedWeapon_Instant"));
	UClass* Z_Construct_UClass_UBTTask_FindPointNearEnemy_NoRegister()
	{
		return UBTTask_FindPointNearEnemy::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_FindPointNearEnemy()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTTask_BlackboardBase();
			Z_Construct_UPackage_TheArena();
			OuterClass = UBTTask_FindPointNearEnemy::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00100080;


			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AI/BTTask_FindPointNearEnemy.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/AI/BTTask_FindPointNearEnemy.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_FindPointNearEnemy(Z_Construct_UClass_UBTTask_FindPointNearEnemy, TEXT("UBTTask_FindPointNearEnemy"));
	UClass* Z_Construct_UClass_UBTTask_HasLosTo_NoRegister()
	{
		return UBTTask_HasLosTo::StaticClass();
	}
	UClass* Z_Construct_UClass_UBTTask_HasLosTo()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBTDecorator();
			Z_Construct_UPackage_TheArena();
			OuterClass = UBTTask_HasLosTo::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00100080;


			UProperty* NewProp_EnemyKey = new(OuterClass, TEXT("EnemyKey"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(EnemyKey, UBTTask_HasLosTo), 0x0000080000000001, Z_Construct_UScriptStruct_UBehaviorTreeTypes_FBlackboardKeySelector()); // 2251347563
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AI/BTTask_HasLosTo.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/AI/BTTask_HasLosTo.h"));
			MetaData->SetValue(NewProp_EnemyKey, TEXT("Category"), TEXT("Condition"));
			MetaData->SetValue(NewProp_EnemyKey, TEXT("ModuleRelativePath"), TEXT("Public/AI/BTTask_HasLosTo.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBTTask_HasLosTo(Z_Construct_UClass_UBTTask_HasLosTo, TEXT("UBTTask_HasLosTo"));
	UFunction* Z_Construct_UFunction_ATheArenaGameMode_FinishMatch()
	{
		UClass* OuterClass=Z_Construct_UClass_ATheArenaGameMode();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("FinishMatch"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00020601, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("finish current match and lock players"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ATheArenaGameMode_SetAllowBots()
	{
		struct TheArenaGameMode_eventSetAllowBots_Parms
		{
			bool bInAllowBots;
			int32 InMaxBots;
		};
		UClass* OuterClass=Z_Construct_UClass_ATheArenaGameMode();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("SetAllowBots"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00020601, 65535, sizeof(TheArenaGameMode_eventSetAllowBots_Parms));
			UProperty* NewProp_InMaxBots = new(ReturnFunction, TEXT("InMaxBots"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(InMaxBots, TheArenaGameMode_eventSetAllowBots_Parms), 0x0000000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInAllowBots, TheArenaGameMode_eventSetAllowBots_Parms, bool);
			UProperty* NewProp_bInAllowBots = new(ReturnFunction, TEXT("bInAllowBots"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInAllowBots, TheArenaGameMode_eventSetAllowBots_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bInAllowBots, TheArenaGameMode_eventSetAllowBots_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_InMaxBots"), TEXT("8"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(NewProp_InMaxBots, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(NewProp_bInAllowBots, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ATheArenaGameMode_NoRegister()
	{
		return ATheArenaGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_ATheArenaGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage_TheArena();
			OuterClass = ATheArenaGameMode::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x008002A4;

			OuterClass->LinkChild(Z_Construct_UFunction_ATheArenaGameMode_FinishMatch());
			OuterClass->LinkChild(Z_Construct_UFunction_ATheArenaGameMode_SetAllowBots());

			UProperty* NewProp_BotControllers = new(OuterClass, TEXT("BotControllers"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(BotControllers, ATheArenaGameMode), 0x0000080000000000);
			UProperty* NewProp_BotControllers_Inner = new(NewProp_BotControllers, TEXT("BotControllers"), RF_Public|RF_Transient|RF_Native) UObjectProperty(FPostConstructInitializeProperties(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AArenaAIController_NoRegister());
			UProperty* NewProp_MaxBots = new(OuterClass, TEXT("MaxBots"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(MaxBots, ATheArenaGameMode), 0x0000080000004000);
			UProperty* NewProp_DamageSelfScale = new(OuterClass, TEXT("DamageSelfScale"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(DamageSelfScale, ATheArenaGameMode), 0x0000080000004000);
			UProperty* NewProp_DeathScore = new(OuterClass, TEXT("DeathScore"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(DeathScore, ATheArenaGameMode), 0x0000080000004000);
			UProperty* NewProp_KillScore = new(OuterClass, TEXT("KillScore"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(KillScore, ATheArenaGameMode), 0x0000080000004000);
			UProperty* NewProp_TimeBetweenMatches = new(OuterClass, TEXT("TimeBetweenMatches"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(TimeBetweenMatches, ATheArenaGameMode), 0x0000080000004000);
			UProperty* NewProp_RoundTime = new(OuterClass, TEXT("RoundTime"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(RoundTime, ATheArenaGameMode), 0x0000080000004000);
			UProperty* NewProp_WarmupTime = new(OuterClass, TEXT("WarmupTime"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(WarmupTime, ATheArenaGameMode), 0x0000080000004000);
			UProperty* NewProp_ArenaHUD = new(OuterClass, TEXT("ArenaHUD"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ArenaHUD, ATheArenaGameMode), 0x0000000000010015, Z_Construct_UClass_AHUD_NoRegister());
			UProperty* NewProp_BotPawnClass = new(OuterClass, TEXT("BotPawnClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(BotPawnClass, ATheArenaGameMode), 0x0000000000000005, Z_Construct_UClass_APawn_NoRegister());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheArenaGameMode_FinishMatch());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ATheArenaGameMode_SetAllowBots());
			OuterClass->ClassConfigName = FName(TEXT("Game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation Info MovementReplication Replication Actor"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TheArenaGameMode.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
			MetaData->SetValue(NewProp_BotControllers, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(NewProp_MaxBots, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(NewProp_DamageSelfScale, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(NewProp_DamageSelfScale, TEXT("ToolTip"), TEXT("scale for self instigated damage"));
			MetaData->SetValue(NewProp_DeathScore, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(NewProp_DeathScore, TEXT("ToolTip"), TEXT("score for death"));
			MetaData->SetValue(NewProp_KillScore, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(NewProp_KillScore, TEXT("ToolTip"), TEXT("score for kill"));
			MetaData->SetValue(NewProp_TimeBetweenMatches, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(NewProp_RoundTime, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(NewProp_RoundTime, TEXT("ToolTip"), TEXT("match duration"));
			MetaData->SetValue(NewProp_WarmupTime, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(NewProp_WarmupTime, TEXT("ToolTip"), TEXT("delay between first player login and starting match"));
			MetaData->SetValue(NewProp_ArenaHUD, TEXT("Category"), TEXT("BPClasses"));
			MetaData->SetValue(NewProp_ArenaHUD, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(NewProp_BotPawnClass, TEXT("Category"), TEXT("GameMode"));
			MetaData->SetValue(NewProp_BotPawnClass, TEXT("ModuleRelativePath"), TEXT("Public/TheArenaGameMode.h"));
			MetaData->SetValue(NewProp_BotPawnClass, TEXT("ToolTip"), TEXT("The bot pawn class"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ATheArenaGameMode(Z_Construct_UClass_ATheArenaGameMode, TEXT("ATheArenaGameMode"));
	UPackage* Z_Construct_UPackage_TheArena()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/TheArena")), false, false));
			ReturnPackage->PackageFlags |= PKG_CompiledIn | 0x00000000;
			FGuid Guid;
			Guid.A = 0x87AD10DD;
			Guid.B = 0xFA41BB6F;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);
		}
		return ReturnPackage;
	}
#endif

